define("tasks/moduleDef",["angular","../core/common/tasks/module"],function(angular){return angular.module("tasks.module",["core.module","common.tasks"])}),define("text!tasks/states/moduleMenu.tpl.html",[],function(){return'<li ng-class="{\'active\': $state.is(\'page.projects.projectsList\')}" bindonce="i18n.projects">\r\n    <a ui-sref="page.projects.projectsList">\r\n        <i class="icon-table"></i>\r\n        <span bo-text="i18n.projects.list.title"></span>\r\n    </a>\r\n</li>\r\n\r\n<li ng-controller="userRoleCtrl" bindonce="current">\r\n    <a href="" class="dropdown-collapse">\r\n        <i class=\'icon-user\'></i>\r\n        <span bo-text="current.role.text"></span>\r\n        <i class=\'icon-angle-down angle-down\'></i>\r\n    </a>\r\n    <ul class="nav nav-stacked">\r\n        <li>\r\n            <ago-project-member-current-selector current="current" member-id="current.memberId"\r\n                                                 ou-lookup-url="tasks/project/lookupOUs"\r\n                                                 role-lookup-url="tasks/project/lookupRoles">\r\n            </ago-project-member-current-selector>\r\n            <button class="btn btn-default col-sm-offset-3" ng-click="switch()" ng-disabled="!filled()"\r\n                    bindonce="i18n.projects.members" bo-text="i18n.projects.members.changeCurrent">\r\n            </button>\r\n        </li>\r\n    </ul>\r\n</li>\r\n\r\n<li bo-class="{\'active\': $state.is(\'page.project.activities\')}" bindonce="i18n.core">\r\n    <a ui-sref="page.project.activities({ itemId: null })">\r\n        <i class="icon-bar-chart"></i>\r\n        <span bo-text="i18n.core.activities.title"></span>\r\n    </a>\r\n</li>\r\n\r\n<li bo-class="{\'active\': $state.is(\'page.project.tasks\')}" bindonce="i18n.tasks">\r\n	<a ui-sref="page.project.tasks">\r\n		<i class="icon-list-alt"></i>\r\n		<span bo-text="i18n.tasks.list.title"></span>\r\n	</a>\r\n</li>\r\n<li bo-class="{\'active\': $state.is(\'page.project.tasks-cards\')}" bindonce="i18n.tasks">\r\n    <a ui-sref="page.project.tasks-cards">\r\n        <i class="icon-calendar-empty"></i>\r\n        <span bo-text="i18n.tasks.cards.title"></span>\r\n    </a>\r\n</li>\r\n\r\n<li bindonce="i18n.tasks">\r\n    <a class="dropdown-collapse" href="">\r\n        <i class="icon-cog"></i>\r\n        <span bo-text="i18n.tasks.menu.dictionaries"></span>\r\n        <i class="icon-angle-down angle-down"></i>\r\n    </a>\r\n    <ul class="nav nav-stacked">\r\n        <li bo-class="{\'active\': $state.is(\'page.project.common-taskType.tasks\')}" bindonce="i18n.common.tasks">\r\n            <a ui-sref="page.project.common-taskType.tasks">\r\n                <i class="icon-cog"></i>\r\n                <span bo-text="i18n.common.tasks.taskType.title"></span>\r\n            </a>\r\n        </li>\r\n        <li bo-class="{\'active\': $state.is(\'page.project.tasks-cardType\')}" bindonce="i18n.tasks">\r\n            <a ui-sref="page.project.tasks-cardType">\r\n                <i class="icon-cog"></i>\r\n                <span bo-text="i18n.tasks.cardTypes.title"></span>\r\n            </a>\r\n        </li>\r\n        <li bo-class="{\'active\': $state.is(\'page.project.customPropTypes.tasks\')}" bindonce="i18n.core">\r\n            <a ui-sref="page.project.customPropTypes.tasks">\r\n                <i class="icon-cog"></i>\r\n                <span bo-text="i18n.core.customPropTypes.title"></span>\r\n            </a>\r\n        </li>\r\n        <li bo-class="{\'active\': $state.is(\'page.project.tasksTags\')}" bindonce="i18n.projects">\r\n            <a ui-sref="page.project.tasksTags">\r\n                <i class="icon-cog"></i>\r\n                <span bo-text="i18n.projects.tags.title"></span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</li>\r\n\r\n<li bo-class="{\'active\': $state.is(\'page.project.reports.tasks\')}" bindonce="i18n.core">\r\n    <a ui-sref="page.project.reports.tasks">\r\n        <i class="icon-print"></i>\r\n        <span bo-text="i18n.core.reporting.reports.title"></span>\r\n    </a>\r\n</li>\r\n\r\n<li bo-class="{\'active\': $state.is(\'page.project.settings\') || $state.is(\'page.project.taskMembers\') || $state.is(\'page.project.templates.tasks\')}"\r\n        bindonce="i18n.projects">\r\n    <a ui-sref="page.project.settings">\r\n        <i class="icon-info"></i>\r\n        <span bo-text="i18n.projects.settings.title"></span>\r\n    </a>\r\n</li>\r\n'}),define("tasks/states/task-type/taskType",["../../moduleDef","angular","text!../moduleMenu.tpl.html"],function(module,angular,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.common-taskType.tasks",url:"/classifier/taskType",views:{"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"common.tasks.taskType.title",url:"page.project.common-taskType.tasks"})}]})}]).controller("taskTypeCtrl",["$scope","$controller",function($scope,$controller){angular.extend(this,$controller("commonTaskTypeCtrl",{$scope:$scope,apiPrefix:"tasks/dictionary"}))}])}),define("text!tasks/states/task/taskList.tpl.html",[],function(){return'<div class="container" \r\n		ng-controller="taskListCtrl"\r\n        filtered-list="{method: \'tasks/tasks/getTasks\'}"\r\n        initial-sorters="{ \'LastChangeTime\': \'desc\' }">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<!-- Filter -->\r\n            <tasks-task-filter></tasks-task-filter>\r\n\r\n			<!-- Content -->\r\n			<ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n				<ago-box-title>\r\n					<i class="fa icon-list-alt"></i>\r\n					<span bindonce="i18n.tasks" bo-text="i18n.tasks.list.title"></span>\r\n				</ago-box-title>\r\n\r\n				<ago-box-content>\r\n					<div class="box-toolbox box-toolbox-top">\r\n						<ago-error-msg></ago-error-msg>\r\n						<div>\r\n                            <common-tasks-create-task-btn sref="page.project.taskCreate" current="editables.selectedTask">\r\n                            </common-tasks-create-task-btn>\r\n\r\n							<ago-report-selector project="reportProject" report-types="REPORT_TYPES"\r\n                                 on-error="onReportError(error)" on-get-params="fillReportParameters(settings, parameters)">\r\n							</ago-report-selector>\r\n\r\n                            <ago-view-mode modes="viewModes" settings="viewModeSettings" mode="viewMode"></ago-view-mode>\r\n\r\n                            <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                            <ago-watch-btn code="Tasks.Task" item-id="null" class="pull-right"></ago-watch-btn>\r\n						</div>\r\n					</div>\r\n\r\n                    <div ng-if="viewMode === viewModes.list">\r\n                        <common-tasks-task-oneline models="models" sorters="sorters" api-prefix="tasks/tasks"\r\n                                view-state="page.project.taskView" create-state="page.project.taskCreate"\r\n                                comments-state="page.project.taskComments" files-state="page.project.taskFiles">\r\n                        </common-tasks-task-oneline>\r\n                    </div>\r\n                    <div ng-if="viewMode === viewModes.cards">\r\n                        <task-cards models="models" toggle-details="toggleDetails(model)"></task-cards>\r\n                    </div>\r\n                    <div ng-if="viewMode === viewModes.gantt">\r\n                        <common-tasks-task-gantt models="models" select="selectTask(task)" api-prefix="tasks/tasks"\r\n                                module="tasks" task-link-template="#!/project/{{task.ProjectCode}}/tasks/{{task.SeqNumber}}">\r\n                        </common-tasks-task-gantt>\r\n                    </div>\r\n\r\n                    <div class="clearfix"></div>\r\n\r\n					<div class="box-toolbox box-toolbox-bottom">\r\n						<button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1"\r\n                                bindonce="i18n.core" bo-text="i18n.core.buttons.more">&dots</button>\r\n\r\n                        <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n						<counter action=\'tasks/tasks/getTasksCount\'></counter>\r\n					</div>\r\n				</ago-box-content>\r\n			</ago-box>\r\n\r\n		</div>\r\n	</div>\r\n</div>\r\n'}),define("tasks/states/task/taskList",["../../moduleDef","angular","text!./taskList.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){var ctrl=function($scope,$controller){angular.extend(this,$controller("commonTasksTaskListCtrl",{$scope:$scope,apiPrefix:"tasks/tasks",reportTypes:["task-list"]}))};module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks",url:"/tasks",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("taskListCtrl",["$scope","$controller",ctrl])}),define("text!tasks/states/task/create/taskCreate.tpl.html",[],function(){return'<div class="container" ng-controller="taskCreateCtrl">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n            <common-tasks-create-task tasks-api="tasks/tasks" dictionary-api="tasks/dictionary"\r\n                                      task-sref="page.project.taskView">\r\n                <!-- Card for linking (if present) -->\r\n                <ago-new-form-static-item label="i18n.tasks.create.linkedCard" visible="card">\r\n                    <div class="checkbox">\r\n                        <label>\r\n                            <input type="checkbox" ng-model="model.useCard">\r\n                            {{ i18n.tasks.create.useCard }}\r\n                        </label>\r\n                    </div>\r\n                    <card-short-info model="cardModel"></card-short-info>\r\n                </ago-new-form-static-item>\r\n            </common-tasks-create-task>\r\n\r\n		</div>\r\n	</div>\r\n</div>\r\n'}),define("tasks/states/task/create/taskCreate",["../../../moduleDef","angular","text!./taskCreate.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskCreate",url:"/newTask?primary&card&startWith&startAfter",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:"common.tasks.create.title",url:"page.project.taskCreate"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskCreateCtrl",["$scope","$stateParams","apinetService","$state","$controller",function($scope,$stateParams,apinetService,$state,$controller){$scope.card=$stateParams.card,$scope.card&&apinetService.action({method:"tasks/cards/getCardInfo",project:$stateParams.project,numpp:$scope.card}).then(function(response){$scope.cardModel=response},$scope.handleException);var actions=[];$scope.card&&actions.push({action:"goToCard",title:"tasks.create.labels.afterCreationGoToCard"}),angular.extend(this,$controller("commonTaskCreateCtrl",{$scope:$scope,settings:{actions:actions,apiPrefix:"tasks/tasks",initModel:function(model){return angular.extend(model,{useCard:!0})},modelToRequest:function(model,request){$scope.card&&model.useCard&&(request.Card=$scope.card)},moveTo:function(nextAction,taskNum){"goToTask"===nextAction?$state.go("page.project.taskView",{num:taskNum,project:$stateParams.project}):"goToPrimary"===nextAction?$state.go("page.project.taskView",{num:$stateParams.primary,project:$stateParams.project}):"goToCard"===nextAction?$state.go("page.project.tasks-cardTasks",{num:$stateParams.card,project:$stateParams.project}):"goToList"===nextAction&&$state.go("page.project.tasks",{project:$stateParams.project})}}}))}])}),define("text!tasks/states/task/view/taskView.tpl.html",[],function(){return'<div class="container" ng-controller="taskViewCtrl">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<div class="row">\r\n				<div class="col-xs-12">\r\n					<ago-tabs current-tab="overview" tab-settings="tabs" style="padding-top: 5px"></ago-tabs>\r\n				</div>\r\n			</div>\r\n\r\n			<div class="row">\r\n				<div class="col-xs-12">\r\n					<ago-error-msg></ago-error-msg>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<ago-box color="purple" large="true">\r\n								<ago-box-title>\r\n									<i class="icon-table"></i>\r\n									<span bindonce="i18n.tasks" bo-text="i18n.tasks.view.general.title"></span>\r\n								</ago-box-title>\r\n								<ago-box-actions>\r\n									<a class="btn btn-xs btn-link">\r\n										<i class="fa" ng-class="{ \'icon-chevron-up\': !generalCollapsed, \'icon-chevron-down\': generalCollapsed }"></i>\r\n									</a>\r\n								</ago-box-actions>\r\n                                <ago-box-content>\r\n                                    <div class="box-toolbox box-toolbox-top">\r\n                                        <common-tasks-status-actions></common-tasks-status-actions>\r\n                                        <common-tasks-assign-all-btn></common-tasks-assign-all-btn>\r\n\r\n                                        <refresher active="loading" on-refresh="load()"></refresher>\r\n                                        <button class="btn btn-danger pull-right" ng-click="delete()" ng-disabled="loading"\r\n                                                style="margin-left: 5px">\r\n                                            <i class="icon-remove"></i>\r\n                                            <span class="inline-block hidden-xs" bindonce="i18n.core" bo-text="i18n.core.buttons.delete"></span>\r\n                                        </button>\r\n                                        <ago-watch-btn code="Tasks.Task" item-id="model.Id" class="pull-right"></ago-watch-btn>\r\n                                        <div class="clearfix"></div>\r\n                                    </div>\r\n								    <form class="form form-horizontal" novalidate bindonce="i18n.tasks">\r\n                                        <common-tasks-props-num-type-part type-lookup-url="tasks/dictionary/lookupTaskTypes">\r\n                                        </common-tasks-props-num-type-part>\r\n\r\n                                        <common-tasks-props-participants-part></common-tasks-props-participants-part>\r\n\r\n                                        <common-tasks-props-content-part></common-tasks-props-content-part>\r\n\r\n                                        <common-tasks-props-timeline-part task-lookup-url="tasks/tasks/lookupTasks"\r\n                                                task-props-state="page.project.taskView">\r\n                                        </common-tasks-props-timeline-part>\r\n\r\n                                        <common-tasks-props-status-priority-part\r\n                                                status-lookup-url="tasks/dictionary/lookupTaskStatuses"\r\n                                                priority-lookup-url="tasks/dictionary/lookupTaskPriorities">\r\n                                        </common-tasks-props-status-priority-part>\r\n\r\n                                        <common-tasks-props-primary-security-part\r\n                                                task-lookup-url="tasks/tasks/lookupTasks"\r\n                                                executor-lookup-url="tasks/tasks/lookupTaskExecutors"\r\n                                                task-props-state="page.project.taskView">\r\n                                        </common-tasks-props-primary-security-part>\r\n\r\n                                        <div class="row">\r\n                                            <ago-form-static-item label="i18n.tasks.fields.spentTime">\r\n                                                {{ model.SpentTime }}\r\n                                            </ago-form-static-item>\r\n                                            <ago-form-item label="i18n.tasks.fields.tags">\r\n                                                <ago-tags view-model="model" tag-type="\'tasks.task\'"\r\n                                                          lookup-method="core/dictionary/lookupTags"\r\n                                                          tag-method="tasks/tasks/tagTask"\r\n                                                          detag-method="tasks/tasks/detagTask"\r\n                                                          on-error="onTagError(error)">\r\n                                                </ago-tags>\r\n                                            </ago-form-item>\r\n                                        </div>\r\n\r\n                                        <common-tasks-props-author-part></common-tasks-props-author-part>\r\n                                    </form>\r\n                                </ago-box-content>\r\n							</ago-box>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<custom-properties model="model" collapsed="customPropsCollapsed"\r\n                                    create-url="tasks/tasks/editParam"\r\n                                    update-url="tasks/tasks/editParam"\r\n                                    delete-url="tasks/tasks/deleteParam"></custom-properties>\r\n						</div>\r\n					</div>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <tasks-task-records task-id="model.Id" task-num="model.SeqNumber" input="true"\r\n                                collapsed="inputsCollapsed" cards="model.InputCards" files="model.InputFiles">\r\n                            </tasks-task-records>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <tasks-task-records task-id="model.Id" task-num="model.SeqNumber" input="false" enable-create="true"\r\n                                collapsed="outputsCollapsed" cards="model.OutputCards" files="model.OutputFiles">\r\n                            </tasks-task-records>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <tasks-subtasks models="model.Subtasks" collapsed="subtasksCollapsed"></tasks-subtasks>\r\n                        </div>\r\n                    </div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<timelog model="model" changed="syncSpentTime" collapsed="timelogCollapsed"></timelog>\r\n						</div>\r\n					</div>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <common-tasks-agreements-view model="model" collapsed="agreementsCollapsed" api-prefix="tasks">\r\n                            </common-tasks-agreements-view>\r\n                        </div>\r\n                    </div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n                            <ago-status-history model="model.StatusHistory" view-settings="taskStatusViewSettings"\r\n                                                change="changeStatus" collapsed="statusHistoryCollapsed">\r\n                            </ago-status-history>\r\n						</div>\r\n					</div>\r\n\r\n				</div>\r\n			</div>\r\n\r\n		</div>\r\n	</div>\r\n</div>\r\n'}),define("tasks/states/task/view/taskView",["../../../moduleDef","angular","text!./taskView.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskView",url:"/tasks/:num",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.taskView({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskViewCtrl",["$scope","tasks.taskTabs","$controller",function($scope,taskTabs,$controller){angular.extend(this,$controller("commonTasksTaskProps",{$scope:$scope,tabs:taskTabs,apiPrefix:"tasks/tasks",listRouteName:"page.project.tasks",saveStateFn:function(state){return angular.extend(state,{subtasksCollapsed:$scope.subtasksCollapsed,timelogCollapsed:$scope.timelogCollapsed})}})),$scope.syncSpentTime=function(delta){$scope.model.SpentTime+=delta},$scope.subtasksCollapsed=!1,$scope.timelogCollapsed=!1,$scope.$watch("subtasksCollapsed",$scope.saveState),$scope.$watch("timelogCollapsed",$scope.saveState)}])}),define("text!tasks/states/task/view/taskComments.tpl.html",[],function(){return'<div class="container"\r\n     filtered-list="{\'method\': \'tasks/tasks/getComments\', \'numpp\': numpp}"\r\n     ng-controller="taskCommentsCtrl">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="comments" tab-settings="tabs" style="padding-top: 5px"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <task-short-info model="task"></task-short-info>\r\n\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-box header-class="{hidden: true}">\r\n                        <ago-box-content>\r\n                            <div class="box-toolbox box-toolbox-top">\r\n                                <ago-error-msg></ago-error-msg>\r\n\r\n                                <form name="form" class="form-inline" ng-submit="addComment()" novalidate>\r\n                                    <div class="input-group">\r\n                                        <input type="text" class="form-control" ng-model="newComment"\r\n                                               bindonce="i18n.tasks"\r\n                                               bo-attr bo-attr-placeholder="i18n.tasks.view.comments.placeholder">\r\n                                        <span class="input-group-btn">\r\n                                            <button type="submit" class="btn btn-success" ng-disabled="!newComment">\r\n                                                <i class="icon-plus"></i>\r\n                                            </button>\r\n\r\n                                            <refresher active="indication.loading || taskLoading" on-refresh="refreshList()"></refresher>\r\n                                        </span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div class="chat">\r\n                                <ul class="list-unstyled list-hover list-striped">\r\n                                    <li class="message" bindonce ng-repeat="m in models">\r\n                                        <div class="avatar">\r\n                                            <i height="23" width="23" class="lead icon-user" bo-if="!m.AvatarUrl"></i>\r\n                                            <img height="23" width="23" bo-if="m.AvatarUrl" bo-src="m.AvatarUrl">\r\n                                        </div>\r\n                                        <div class="name-and-time">\r\n                                            <div class="name pull-left">\r\n                                                <small class="text-contrast" bo-text="m.Author"></small>\r\n                                            </div>\r\n                                            <div class="time pull-right">\r\n                                                <small class="date pull-right text-muted" data-placement="top">\r\n                                                    <span class="timeago fade has-tooltip in" data-placement="top"\r\n                                                            bo-title="m.CreationTime | date:\'ago_datetime\'"\r\n                                                            bo-text="moment(m.CreationTime).fromNow()">\r\n                                                    </span>\r\n                                                    <i class="icon-time"></i>\r\n                                                </small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="body" bo-text="m.Text"></div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div class="box-toolbox box-toolbox-bottom clearfix">\r\n                                <form name="form" class="form-inline" ng-submit="addComment()" novalidate>\r\n                                    <div class="input-group">\r\n                                        <input type="text" class="form-control" ng-model="newComment"\r\n                                               bindonce="i18n.tasks"\r\n                                               bo-attr bo-attr-placeholder="i18n.tasks.view.comments.placeholder">\r\n                                        <span class="input-group-btn">\r\n                                            <button type="submit" class="btn btn-success" ng-disabled="!newComment">\r\n                                                <i class="icon-plus"></i>\r\n                                            </button>\r\n<counter action="tasks/tasks/getCommentsCount"></counter>\r\n                                            <refresher active="indication.loading || taskLoading" on-refresh="refreshList()"></refresher>\r\n\r\n                                        </span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </ago-box-content>\r\n                    </ago-box>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/task/view/taskComments",["../../../moduleDef","angular","text!./taskComments.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskComments",url:"/tasks/:num/comments",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.taskView({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskCommentsCtrl",["$scope","apinetService","$stateParams","tasks.taskTabs",function($scope,apinetService,$stateParams,taskTabs){$scope.numpp=$stateParams.num,$scope.initialRequestParams={numpp:$scope.numpp},$scope.newComment=null,$scope.tabs=taskTabs($stateParams.num);var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=angular.isArray(error)?error:[error],$scope.taskLoading=!1};$scope.onCacheKey=function(key){return key+"_"+$scope.numpp},$scope.addComment=function(){$scope.newComment&&apinetService.action({method:"tasks/tasks/createComment",project:$stateParams.project,numpp:$scope.numpp,text:$scope.newComment}).then(function(response){$scope.models.push(response),$scope.newComment=null},handleException)},$scope.taskLoading=!1,$scope.onCacheState=function(state){state.model=$scope.task};var tryLoadTaskInfo=function(){$scope.taskLoading=!0,apinetService.action({method:"tasks/tasks/getTaskInfo",project:$stateParams.project,num:$scope.numpp}).then(function(response){$scope.task=response,$scope.taskLoading=!1},handleException)};tryLoadTaskInfo()}])}),define("text!tasks/states/task/view/taskFiles.tpl.html",[],function(){return'<div class="container" \r\n	ng-controller="taskFilesCtrl"\r\n	filtered-list="{method: \'tasks/tasks/getFiles\'}"\r\n	initial-sorters="{Name: \'asc\'}">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<div class="row">\r\n				<div class="col-xs-12">\r\n					<ago-tabs current-tab="files" tab-settings="tabs" style="padding-top: 5px"></ago-tabs>\r\n				</div>\r\n			</div>\r\n\r\n            <files-view models="models" owner-id="numpp"\r\n                        filter-meta="tasks/tasks/TaskFilesMetadata" filter-group="Tasks.TaskFiles"\r\n                        upload-url="tasks/tasks/uploadFiles" rename-url="tasks/tasks/renameFile"\r\n                        delete-url="tasks/tasks/deleteFiles">\r\n            </files-view>\r\n		</div>\r\n	</div>\r\n</div>\r\n'}),define("tasks/states/task/view/taskFiles",["../../../moduleDef","angular","text!./taskFiles.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskFiles",url:"/tasks/:num/files",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.taskView({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskFilesCtrl",["$scope","$stateParams","apinetService","$window","i18n","tasks.taskTabs",function($scope,$stateParams,apinetService,$window,i18n,taskTabs){$scope.numpp=$stateParams.num,$scope.initialRequestParams={ownerId:$scope.numpp},$scope.$on("resetFilter",function(){$scope.requestParams.ownerId=$scope.numpp}),$scope.tabs=taskTabs($scope.numpp),$scope.onCacheKey=function(key){return key+"_"+$scope.numpp}}])}),define("text!tasks/states/task/view/taskActivity.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="taskActivityCtrl"\r\n     filtered-list="{method: \'tasks/activity/getActivities\'}"\r\n     initial-sorters="{ }">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n            <!--Tabs-->\r\n            <div class="row" bindonce="taskNum">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="activity" tab-settings="tabs" style="padding-top: 5px"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <!--Task short info-->\r\n            <task-short-info model="model"></task-short-info>\r\n\r\n            <!-- Filter -->\r\n            <div filters-box="filter" sorters="sorters" meta="tasks/activity/activityMetadata" group="Tasks.Activity"\r\n                 apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n                 sorters-hidden="true" filter-applied="filterApplied" style="padding-top: 5px">\r\n                <div class="row">\r\n                    <form class="col-xs-12 form form-horizontal" bindonce="i18n.core">\r\n                        <div class="form-group">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.period.title"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <select ng-model="filter.simple.period" class="form-control">\r\n                                    <option value="all" bo-text="i18n.core.activities.filters.period.all"></option>\r\n                                    <option value="new" bo-text="i18n.core.activities.filters.period.new"></option>\r\n                                    <option value="today" bo-text="i18n.core.activities.filters.period.today"></option>\r\n                                    <option value="yesterday" bo-text="i18n.core.activities.filters.period.yesterday"></option>\r\n                                    <option value="thisWeek" bo-text="i18n.core.activities.filters.period.thisWeek"></option>\r\n                                    <option value="pastWeek" bo-text="i18n.core.activities.filters.period.pastWeek"></option>\r\n                                    <option value="thisMonth" bo-text="i18n.core.activities.filters.period.thisMonth"></option>\r\n                                    <option value="pastMonth" bo-text="i18n.core.activities.filters.period.pastMonth"></option>\r\n                                    <option value="period" bo-text="i18n.core.activities.filters.period.period"></option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.dates.from"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <input bs-datepicker class="form-control" ng-model="filter.simple.fromDate"/>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.dates.to"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <input bs-datepicker class="form-control" ng-model="filter.simple.toDate"/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Content -->\r\n            <ago-box color="purple" large="true"\r\n                     header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                <ago-box-title>\r\n                    <i class="fa icon-activities"></i>\r\n                    <span bindonce="i18n.core" bo-text="i18n.core.activities.title"></span>\r\n                </ago-box-title>\r\n\r\n                <ago-box-content>\r\n                    <div class="box-toolbox box-toolbox-top">\r\n                        <ago-error-msg></ago-error-msg>\r\n\r\n                        <button class="btn btn-default" bindonce="i18n.core" bo-text="i18n.core.activities.mark"\r\n                                ng-click="markAsRead()"></button>\r\n\r\n                        <refresher active="indication.loading || taskLoading" on-refresh="refreshList()"></refresher>\r\n                        <div class="clearfix"></div>\r\n                    </div>\r\n\r\n                    <div class="alert alert-warning" ng-show="models.length == 0" bindonce="i18n.core"\r\n                         bo-text="i18n.core.activities.empty">\r\n                    </div>\r\n\r\n                    <div class="row activity">\r\n                        <ul class="col-xs-12 list-unstyled list-hover">\r\n                            <li bindonce ng-repeat="item in models">\r\n                                <div class="clearfix">\r\n                                    <ago-time-moment class="pull-right" time="item.ActivityTime"></ago-time-moment>\r\n\r\n                                    <div class="inline-block user">\r\n                                        <div class="avatar pull-left text-contrast">\r\n                                            <i class="lead icon-user" bo-if="!item.User.AvatarUrl"></i>\r\n                                            <img width="23" height="23" bo-src="item.User.AvatarUrl"\r\n                                                 bo-if="item.User.AvatarUrl"/>\r\n                                        </div>\r\n                                        <div class="action pull-left user-name">\r\n                                            <span class="text-contrast" bo-text="item.User.Name"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="action">\r\n                                    <span bo-text="item.Action"></span>\r\n                                    <span bo-text="item.Before"></span>\r\n                                    <span bo-text="item.After"></span>\r\n\r\n                                    <div class="clearfix"></div>\r\n                                </div>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div class="box-toolbox box-toolbox-bottom">\r\n                        <next-page></next-page>\r\n\r\n                        <refresher active="indication.loading || taskLoading" on-refresh="refreshList()"></refresher>\r\n                        <counter action="tasks/activity/getActivitiesCount"></counter>\r\n                    </div>\r\n                </ago-box-content>\r\n            </ago-box>\r\n        </div>\r\n    </div>\r\n</div>\r\n'
}),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.addBuffer("tasks/states/activity/activity.css")}),requirejs.s.contexts._.nextTick=requirejs.nextTick,define("tasks/states/task/view/taskActivity",["../../../moduleDef","angular","text!./taskActivity.tpl.html","text!../../moduleMenu.tpl.html","css!../../activity/activity.css"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskActivity",url:"/tasks/:num/activity",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.taskView({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskActivityCtrl",["$scope","$stateParams","tasks.taskTabs","apinetService",function($scope,$stateParams,taskTabs,apinetService){$scope.taskNum=$stateParams.num,$scope.tabs=taskTabs($scope.taskNum),$scope.isFirstRequest=!0,$scope.initialRequestParams={numpp:$stateParams.num,predefined:"new"},$scope.$on("resetFilter",function(){var defaultPredefined=$scope.isFirstRequest?"new":"all";$scope.filterApplied=$scope.isFirstRequest,$scope.isFirstRequest=!1,$scope.filter.simple={period:defaultPredefined},$scope.requestParams.predefined=defaultPredefined}),$scope.$watch("filter.simple.period",function(value){$scope.requestParams.predefined=value||"all"},!0),$scope.$watch("filter.simple.fromDate",function(value){$scope.requestParams.fromDate=value},!0),$scope.$watch("filter.simple.toDate",function(value){$scope.requestParams.toDate=value},!0);var handleException=function(error){$scope.taskLoading=!1,$scope.resetValidation(),$scope.validation.generalErrors=[error]};$scope.markAsRead=function(){apinetService.action({method:"tasks/activity/markAsRead",project:$stateParams.project,numpp:$stateParams.num}).then(function(){$scope.refreshList(),$scope.$broadcast("tabs:reset")},handleException)},$scope.taskLoading=!1,$scope.onCacheKey=function(key){return key+"_"+$scope.taskNum},$scope.onCacheState=function(state){angular.extend(state,{isFirstRequest:$scope.isFirstRequest,requestParams:$scope.requestParams,model:$scope.model})};var tryLoadTaskInfo=function(){$scope.taskLoading=!0,apinetService.action({method:"tasks/tasks/getTaskInfo",project:$stateParams.project,num:$scope.taskNum}).then(function(response){$scope.model=response,$scope.taskLoading=!1},handleException)};tryLoadTaskInfo()}])}),define("text!tasks/states/task/view/taskSubtasks.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="taskSubtasksCtrl"\r\n     filtered-list="{method: \'tasks/tasks/getSubtasks\'}"\r\n     initial-sorters="{ InternalSeqNumber: \'desc\' }">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="subtasks" tab-settings="tabs" style="padding-top: 5px"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Filter -->\r\n            <tasks-task-filter></tasks-task-filter>\r\n\r\n            <!-- Content -->\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                        <ago-box-title>\r\n                            <i class="fa icon-tasks"></i>\r\n                            <span bindonce="i18n.tasks" bo-text="i18n.tasks.list.title"></span>\r\n                        </ago-box-title>\r\n\r\n                        <ago-box-content>\r\n                            <div class="box-toolbox box-toolbox-top">\r\n                                <ago-error-msg></ago-error-msg>\r\n\r\n                                <div>\r\n                                    <common-tasks-create-task-btn sref="page.project.taskCreate"\r\n                                                                  primary="numpp" current="editables.selectedTask">\r\n                                    </common-tasks-create-task-btn>\r\n\r\n                                    <ago-view-mode modes="viewModes" settings="viewModeSettings" mode="viewMode"></ago-view-mode>\r\n\r\n                                    <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div ng-if="viewMode === viewModes.list">\r\n                                <common-tasks-task-oneline models="models" sorters="sorters" api-prefix="tasks/tasks"\r\n                                       view-state="page.project.taskView" create-state="page.project.taskCreate"\r\n                                       comments-state="page.project.taskComments" files-state="page.project.taskFiles">\r\n                                </common-tasks-task-oneline>\r\n                            </div>\r\n                            <div ng-if="viewMode === viewModes.cards">\r\n                                <task-cards models="models" toggle-details="toggleDetails(model)"></task-cards>\r\n                            </div>\r\n                            <div ng-if="viewMode === viewModes.gantt">\r\n                                <common-tasks-task-gantt models="models" select="selectTask(task)" api-prefix="tasks/tasks"\r\n                                     module="tasks" task-link-template="#!/project/{{task.ProjectCode}}/tasks/{{task.SeqNumber}}">\r\n                                </common-tasks-task-gantt>\r\n                            </div>\r\n                            <div class="clearfix"></div>\r\n\r\n                            <div class="box-toolbox box-toolbox-bottom">\r\n                                <button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1"\r\n                                        bindonce="i18n.core" bo-text="i18n.core.buttons.more"></button>\r\n\r\n                                <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                                <counter action=\'tasks/tasks/getSubtasksCount\'></counter>\r\n                            </div>\r\n                        </ago-box-content>\r\n                    </ago-box>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/task/view/taskSubtasks",["../../../moduleDef","angular","text!./taskSubtasks.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){var ctrl=function($scope,$stateParams,taskTabs,$controller){$scope.numpp=$stateParams.num,$scope.initialRequestParams={num:$scope.numpp},angular.extend(this,$controller("TabbedViewCtrl",{$scope:$scope,num:$stateParams.num,tabs:taskTabs})),angular.extend(this,$controller("commonTasksTaskListCtrl",{$scope:$scope,apiPrefix:"tasks/tasks",reportTypes:["task-list"]})),$scope.onCacheKey=function(key){return key+"_"+$scope.numpp}};module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskSubtasks",url:"/tasks/:num/subtasks",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.list.title",url:"page.project.tasks"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.taskView({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("taskSubtasksCtrl",["$scope","$stateParams","tasks.taskTabs","$controller",ctrl])}),define("text!tasks/states/taskProjectInfo.tpl.html",[],function(){return'<div class="container" ng-controller="projectInfoCtrl">\r\n    <ago-project-info load-url="tasks/project/getProject" update-url="tasks/project/updateProject"\r\n            tag-url="tasks/project/tagProject" detag-url="tasks/project/detagProject">\r\n    </ago-project-info>\r\n</div>\r\n'}),define("tasks/states/taskProjectInfo",["../moduleDef","angular","text!./taskProjectInfo.tpl.html","text!./moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.settings",url:"/tasks-props",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"projects.settings.title",url:"page.project.tasks-project"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("projectInfoCtrl",["$scope","$stateParams","tasks.projectTabs",function($scope,$stateParams,projectTabs){$scope.tabs=projectTabs($stateParams.project)}])}),define("text!tasks/states/taskProjectMembers.tpl.html",[],function(){return'<div class="container"\r\n        ng-controller="taskProjectMembersCtrl"\r\n        filtered-list="{method: \'tasks/project/getMembers\'}"\r\n        initial-sorters="{FullName: \'asc\'}">\r\n\r\n    <ago-project-members metadata-url="tasks/project/projectMemberMetadata" filter-group="Project.Members"\r\n            add-url="tasks/project/addMember" remove-url="tasks/project/removeMember"\r\n            update-url="tasks/project/updateMember"\r\n            add-permission-url="tasks/project/addPermission" remove-permission-url="tasks/project/removePermission"\r\n            change-current-url="tasks/project/changeMemberCurrent" change-roles-url="tasks/project/changeMemberRoles"\r\n            role-lookup-url="tasks/project/lookupRoles" ou-lookup-url="tasks/project/lookupOUs">\r\n    </ago-project-members>\r\n</div>\r\n'}),define("tasks/states/taskProjectMembers",["../moduleDef","jquery","angular","text!./taskProjectMembers.tpl.html","text!./moduleMenu.tpl.html"],function(module,$,angular,tpl,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskMembers",url:"/members",views:{"":{template:tpl},"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"projects.members.title",url:"page.project.taskMembers"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("taskProjectMembersCtrl",["$scope","$stateParams","tasks.projectTabs",function($scope,$stateParams,projectTabs){$scope.tabs=projectTabs($stateParams.project)}])}),define("text!tasks/states/taskProjectInvitations.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="taskProjectInvitationsCtrl"\r\n     filtered-list="{method: \'tasks/project/getInvitations\'}"\r\n     initial-sorters="{CreationTime: \'desc\'}">\r\n\r\n    <ago-project-invitations metadata-url="tasks/project/projectInvitationMetadata" filter-group="Project.Invitations"\r\n                         add-url="tasks/project/addInvitation" remove-url="tasks/project/removeInvitation"\r\n                         update-url="tasks/project/updateInvitation" send-url="tasks/project/sendInvitation"\r\n                         role-lookup-url="tasks/project/lookupRoles" ou-lookup-url="tasks/project/lookupOUs"\r\n                         counter-url="tasks/project/getInvitationsCount" sent-log-url="tasks/project/getSentLog">\r\n    </ago-project-invitations>\r\n</div>\r\n'}),define("tasks/states/taskProjectInvitations",["../moduleDef","jquery","angular","text!./taskProjectInvitations.tpl.html","text!./moduleMenu.tpl.html"],function(module,$,angular,tpl,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.taskInvitations",url:"/invitations",views:{"":{template:tpl},"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"projects.invitations.title",url:"page.project.taskInvitations"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("taskProjectInvitationsCtrl",["$scope","$stateParams","tasks.projectTabs",function($scope,$stateParams,projectTabs){$scope.tabs=projectTabs($stateParams.project)}])}),define("tasks/states/taskReports",["../moduleDef","angular","text!./moduleMenu.tpl.html"],function(module,angular,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.reports.tasks",url:"/reports",views:{"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"core.reporting.reports.title",url:"page.project.reports.tasks"})}]})}])}),define("tasks/states/taskReportTemplates",["../moduleDef","angular","text!./moduleMenu.tpl.html"],function(module,angular,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.templates.tasks",url:"/settings/templates",views:{"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","tabs","tasks.projectTabs","$stateParams",function($rootScope,tabs,projectTabs,$stateParams){$rootScope.breadcrumbs.push({name:"core.reporting.templates.title",url:"page.project.templates.tasks"});var taskProjectTabs=projectTabs($stateParams.project);angular.extend(tabs,taskProjectTabs)}]})}])}),define("text!tasks/states/activity/activityList.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="projectActivityCtrl"\r\n     filtered-list="{method: \'tasks/activity/getOverallActivities\'}"\r\n     initial-sorters="{ }">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<!-- Filter -->\r\n			<div filters-box="filter" sorters="sorters" meta="tasks/activity/overallActivityMetadata" group="Tasks.Activity"\r\n			     apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n			     sorters-hidden="true" filter-applied="filterApplied" style="padding-top: 5px">\r\n				<div class="row">\r\n					<form class="col-xs-12 form form-horizontal" bindonce="i18n.core">\r\n						<div class="form-group">\r\n							<label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n							       bo-text="i18n.core.activities.filters.period.title"></label>\r\n\r\n							<div class="col-lg-10 col-sm-8 col-xs-7">\r\n								<select ng-model="filter.simple.period" class="form-control">\r\n                                    <option value="all" bo-text="i18n.core.activities.filters.period.all"></option>\r\n                                    <option value="new" bo-text="i18n.core.activities.filters.period.new"></option>\r\n									<option value="today" bo-text="i18n.core.activities.filters.period.today"></option>\r\n									<option value="yesterday" bo-text="i18n.core.activities.filters.period.yesterday"></option>\r\n									<option value="thisWeek" bo-text="i18n.core.activities.filters.period.thisWeek"></option>\r\n									<option value="pastWeek" bo-text="i18n.core.activities.filters.period.pastWeek"></option>\r\n									<option value="thisMonth" bo-text="i18n.core.activities.filters.period.thisMonth"></option>\r\n									<option value="pastMonth" bo-text="i18n.core.activities.filters.period.pastMonth"></option>\r\n									<option value="period" bo-text="i18n.core.activities.filters.period.period"></option>\r\n								</select>\r\n							</div>\r\n						</div>\r\n						<div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n							<label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n							       bo-text="i18n.core.activities.filters.dates.from"></label>\r\n\r\n							<div class="col-lg-10 col-sm-8 col-xs-7">\r\n								<input bs-datepicker class="form-control" ng-model="filter.simple.fromDate"/>\r\n							</div>\r\n						</div>\r\n                        <div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.dates.to"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <input bs-datepicker class="form-control" ng-model="filter.simple.toDate"/>\r\n                            </div>\r\n                        </div>\r\n					</form>\r\n				</div>\r\n			</div>\r\n\r\n			<!-- Content -->\r\n			<ago-box color="purple" large="true"\r\n			         header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n				<ago-box-title>\r\n					<i class="fa icon-activities"></i>\r\n					<span bindonce="i18n.core" bo-text="i18n.core.activities.title"></span>\r\n				</ago-box-title>\r\n\r\n				<ago-box-content>\r\n					<div class="box-toolbox box-toolbox-top">\r\n						<ago-error-msg></ago-error-msg>\r\n\r\n                        <button class="btn btn-default" bindonce="i18n.core" bo-text="i18n.core.activities.mark"\r\n                                ng-click="markAsRead()"></button>\r\n\r\n						<refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n						<div class="clearfix"></div>\r\n					</div>\r\n\r\n					<div class="alert alert-warning" ng-show="models.length == 0" bindonce="i18n.core"\r\n					     bo-text="i18n.core.activities.empty">\r\n					</div>\r\n\r\n                    <div class="row activity">\r\n                        <ul class="col-xs-12 list-unstyled list-hover">\r\n                            <li bindonce ng-repeat="model in models">\r\n                                <div class="clearfix">\r\n                                    <ago-time-moment class="pull-right" time="model.ActivityTime"></ago-time-moment>\r\n\r\n                                    <div class="action activity-item">\r\n                                        <strong>\r\n                                            <a bo-if="isTaskItem(model)"\r\n                                               ui-sref="page.project.taskView({ num: model.ItemName })">\r\n                                                {{ model.ActivityItem }}\r\n                                            </a>\r\n                                            <a bo-if="isCardItem(model)"\r\n                                               ui-sref="page.project.tasks-cardProps({ num: model.ItemName })">\r\n                                                {{ model.ActivityItem }}\r\n                                            </a>\r\n                                            <span bo-if="isProjectItem(model)">{{ model.ActivityItem }}</span>\r\n                                        </strong>\r\n                                    </div>\r\n\r\n                                    <div class="inline-block user" ng-repeat="user in model.Users">\r\n                                        <div class="avatar pull-left text-contrast">\r\n                                            <i class="lead icon-user" bo-if="!user.AvatarUrl"></i>\r\n                                            <img width="23" height="23" bo-src="user.AvatarUrl"\r\n                                                 bo-if="user.AvatarUrl"/>\r\n                                        </div>\r\n                                        <div class="user-name action pull-left">\r\n                                            <span class="text-contrast" bo-text="user.Name"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div bo-if="model.MoreUsers" class="inline-block more-users">\r\n                                        <span class="action pull-left text-contrast" bindonce="i18n.core"\r\n                                              bo-text="\'core.activities.moreUsers\' | i18n:{ num: model.MoreUsers }"></span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="action">\r\n                                    <ul class="changes">\r\n                                        <li bindonce ng-repeat="change in model.Changes" bo-text="change"\r\n                                            bo-class="{\'last\': $last}"></li>\r\n\r\n                                        <li bo-if="model.MoreChanges" class="more-changes"\r\n                                            bo-text="\'core.activities.moreChanges\' | i18n:{ num: model.MoreChanges }"></li>\r\n                                    </ul>\r\n\r\n                                    <details-btn bo-if="isTaskItem(model)" open="model.details.expanded"\r\n                                                 toggle="toggleTask(model)"></details-btn>\r\n                                    <details-btn bo-if="isCardItem(model)" open="model.details.expanded"\r\n                                                 toggle="toggleCard(model)"></details-btn>\r\n                                    <div class="clearfix"></div>\r\n                                </div>\r\n\r\n                                <!--Task details (as short info)-->\r\n                                <div ng-if="isTaskItem(model)" class="details" ng-show="model.details.expanded">\r\n                                    <span ng-hide="model.details.loaded" bindonce="i18n.core" bo-text="i18n.core.labels.loading + \'...\'"></span>\r\n                                    <task-short-info model="model.details" ng-show="model.details.loaded"></task-short-info>\r\n                                </div>\r\n                                <!--Card details (as short info)-->\r\n                                <div ng-if="isCardItem(model)" class="details" ng-show="model.details.expanded">\r\n                                    <span ng-hide="model.details.loaded" bindonce="i18n.core" bo-text="i18n.core.labels.loading + \'...\'"></span>\r\n                                    <card-short-info model="model.details" ng-show="model.details.loaded"></card-short-info>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div class="box-toolbox box-toolbox-bottom">\r\n                        <next-page></next-page>\r\n\r\n                        <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                        <counter action="tasks/activity/getOverallActivitiesCount"></counter>\r\n                    </div>\r\n				</ago-box-content>\r\n			</ago-box>\r\n		</div>\r\n	</div>\r\n</div>\r\n'}),define("tasks/states/activity/activityList",["../../moduleDef","angular","text!./activityList.tpl.html","text!../moduleMenu.tpl.html","css!./activity.css"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.activities",url:"/activities",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:function($rootScope){$rootScope.breadcrumbs.push({name:"core.activities.title",url:"page.project.activities"})},onExit:function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}})}]).controller("projectActivityCtrl",["$scope","$stateParams","apinetService",function($scope,$stateParams,apinetService){$scope.isFirstRequest=!0,$scope.initialRequestParams={predefined:"new"},$scope.$on("resetFilter",function(){var defaultPredefined=$scope.isFirstRequest?"new":"all";$scope.filterApplied=$scope.isFirstRequest,$scope.isFirstRequest=!1,$scope.filter.simple={period:defaultPredefined},$scope.requestParams.predefined=defaultPredefined}),$scope.$watch("filter.simple.period",function(value){$scope.requestParams.predefined=value||"all"},!0),$scope.$watch("filter.simple.fromDate",function(value){$scope.requestParams.fromDate=value},!0),$scope.$watch("filter.simple.toDate",function(value){$scope.requestParams.toDate=value},!0);var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]};$scope.markAsRead=function(){apinetService.action({method:"tasks/activity/markAsRead",project:$stateParams.project}).then(function(){$scope.refreshList()},handleException)},$scope.isTaskItem=function(model){return"TaskModel"==model.ItemType},$scope.isCardItem=function(model){return"CardModel"==model.ItemType},$scope.isProjectItem=function(model){return"ProjectModel"==model.ItemType};var toggle=function(item,url){item.details||angular.extend(item,{details:{loaded:!1,expanded:!1}}),item.details.expanded=!item.details.expanded,item.details.expanded&&item.details.loaded!==!0&&apinetService.action({method:url,project:$stateParams.project,numpp:item.ItemName}).then(function(response){angular.extend(item.details,response),item.details.loaded=!0},handleException)};$scope.toggleTask=function(item){toggle(item,"tasks/tasks/getTaskInfo")},$scope.toggleCard=function(item){toggle(item,"tasks/cards/getCardInfo")},$scope.onCacheState=function(state){angular.extend(state,{isFirstRequest:$scope.isFirstRequest,requestParams:$scope.requestParams})}}])}),define("text!core/states/tags/tags.tpl.html",[],function(){return'<div class="container">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}" style="margin-top: 5px">\r\n				<ago-box-title>\r\n					<i class="fa icon-cog"></i>\r\n					<span bindonce="i18n.projects" bo-text="i18n.projects.tags.title"></span>\r\n				</ago-box-title>\r\n				\r\n				<ago-box-content>\r\n					<div class="box-toolbox box-toolbox-top">\r\n						<ago-error-msg></ago-error-msg>\r\n\r\n						<form class="form-inline" role="form">\r\n							<div class="form-group col-xs-8" style="padding-left: 0">\r\n							    <select class="form-control" ng-model="currentType" ng-options="t.id as i18n.msg(t.code) for t in tagTypes"></select>\r\n							</div>\r\n						</form>\r\n\r\n						<div class="pull-right">\r\n                            <refresher active="loading" on-refresh="reload()"></refresher>\r\n							<button class="btn btn-success pull-right" title="{{ i18n.core.tags.addTag }}" ng-click="newTag()">\r\n								<i class="icon-plus"></i>\r\n							</button>\r\n						</div>\r\n                        <div class="clearfix"></div>\r\n					</div>\r\n					<div class="responsive-table">\r\n						<div class="scrollable-area">\r\n							<table class="table table-bordered">\r\n								<thead>\r\n									<tr>\r\n										<th class="col-xs-12 col-sm-6">{{ i18n.core.fields.name }}</th>\r\n										<th class="col-sm-6 hidden-xs">{{ i18n.core.fields.fullName }}</th>\r\n										<th class="onepct">&nbsp;</th>\r\n									</tr>\r\n								</thead>\r\n								<tbody>\r\n									<tr ng-repeat="model in models">\r\n										<td class="col-xs-12 col-sm-6" style="white-space: normal">\r\n											<inline-text model="model.Name" on-update="onUpdate(model, val)" on-cancel="onCancel(model)" input-class="span10" required></inline-text>\r\n											<span ng-show="model.validation.generalErrors" class="help-block alert-error">\r\n												{{ model.validation.generalErrors | joinBy }}\r\n											</span>\r\n											<span ng-show="model.validation.fieldErrors[\'Name\']" class="help-block alert-error">\r\n												{{ model.validation.fieldErrors[\'Name\'] | joinBy }}\r\n											</span>\r\n											<p ng-show="model.Name != model.FullName">\r\n												<small class="visible-xs text-muted">{{ model.FullName }}</small>\r\n											</p>\r\n										</td>\r\n										<td class="col-sm-6 hidden-xs">{{ model.FullName }}</td>\r\n										<td class="onepct">\r\n											<div class="btn-group-vertical">\r\n												<button ng-show="model.Id" class="btn btn-success btn-sm" title="{{ i18n.core.tags.addTag }}" ng-click="newTag(model)">\r\n													<i class="icon-plus"></i>\r\n												</button>\r\n												<ago-btn-delete title="{{ i18n.tasks.types.buttons.delete }}" ng-click="deleteTag(model)"></ago-btn-delete>\r\n											</div>\r\n										</td>\r\n									</tr>\r\n								</tbody>\r\n							</table>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="box-toolbox box-toolbox-bottom">\r\n						<button type="button" class="btn btn-primary" ng-click="nextPage()">{{ i18n.core.buttons.more }}</button>\r\n\r\n                        <refresher active="loading" on-refresh="reload()"></refresher>\r\n						<counter action="core/dictionary/getTagsCount"></counter>\r\n					</div>\r\n				</ago-box-content>\r\n				\r\n			</ago-box>\r\n\r\n		</div>\r\n	</div>\r\n</div>'}),define("tasks/states/taskTags",["../moduleDef","angular","text!./moduleMenu.tpl.html","text!../../core/states/tags/tags.tpl.html"],function(module,angular,moduleMenuTpl,tpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasksTags",url:"/tags",views:{"":{template:tpl,controller:"tagsCtrl"},"moduleMenu@page":{template:moduleMenuTpl}},resolve:{tagTypes:function(){return[{id:"tasks.task",code:"tasks.tags.type"}]}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"projects.tags.title",url:"page.project.tasksTags"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}])}),define("tasks/states/taskCustomPropTypes",["../moduleDef","angular","text!./moduleMenu.tpl.html"],function(module,angular,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.customPropTypes.tasks",url:"/userProps",views:{"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"core.customPropTypes.title",url:"page.project.customPropTypes.tasks"})}]})}])}),define("text!tasks/states/card-type/cardTypeView.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="tasksCardTypeCtrl"\r\n     filtered-list="{method: \'tasks/dictionary/getCardTypes\'}"\r\n     initial-sorters="{ FullName: \'asc\'}">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <div filters-box="filter" sorters="sorters" meta="tasks/dictionary/cardTypeMetadata"\r\n                 group="Tasks.CardType"\r\n                 apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n                 filter-applied="filterApplied" style="padding-top: 5px">\r\n                <ago-box-content>\r\n                    <form class="form form-horizontal">\r\n                        <div class="form-group">\r\n                            <label class="col-md-3 control-label">{{ i18n.core.fields.name }}</label>\r\n\r\n                            <div class="col-md-9">\r\n                                <input ng-model="filter.simple.FullName" filter-node="{path: \'FullName\', op:\'like\'}"\r\n                                       class="form-control"/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ago-box-content>\r\n            </div>\r\n\r\n            <ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                <ago-box-title>\r\n                    <i class="icon-cog"></i>\r\n                    {{ i18n.tasks.cardTypes.title }}\r\n                </ago-box-title>\r\n                <ago-box-content>\r\n                    <ago-hdict-view counter-url="tasks/dictionary/getCardTypesCount">\r\n                        <ago-hdict-add-form>\r\n                            <ago-hdict-default-add-form model="newModel" vld="validation"\r\n                                parent-url="tasks/dictionary/lookupCardTypes"\r\n                                ng-show="createFormVisible" on-update="create()" on-cancel="toggleCreateForm(false)">\r\n                            </ago-hdict-default-add-form>\r\n                        </ago-hdict-add-form>\r\n                        <ago-hdict-header>\r\n                            <card-type-full-name-header></card-type-full-name-header>\r\n                        </ago-hdict-header>\r\n                        <ago-hdict-column>\r\n                            <card-type-full-name-column></card-type-full-name-column>\r\n                        </ago-hdict-column>\r\n                    </ago-hdict-view>\r\n                </ago-box-content>\r\n            </ago-box>\r\n        </div>\r\n    </div>\r\n</div>\r\n'
}),define("tasks/states/card-type/cardType",["../../moduleDef","angular","text!./cardTypeView.tpl.html","text!./../moduleMenu.tpl.html"],function(module,angular,template,menuTemplate){var ctrl=function($scope,$controller,apinetService,$stateParams){angular.extend(this,$controller("BaseHDictFullNameCtrl",{$scope:$scope,actionPrefix:"tasks/dictionary",entityType:"CardType"})),$scope.itemUploadOption=function(model){var itemOptions={};return angular.extend(itemOptions,{url:apinetService.apiUrl("tasks/dictionary/uploadCardTypeIcon",$stateParams.project),acceptFileTypes:/(\.|\/)(gif|jpe?g|png)$/i,done:function(e,data){data&&data.result&&data.result.files&&(model.IconId=data.result.files[0].model,$scope.calculateImageUrl(model))},fail:function(e,data){"abort"!==data.errorThrown&&$scope.handleException(data.result.message)},maxNumberOfFiles:1,submit:function(e,data){delete model.imageUrl,angular.extend(data.formData,{project:$stateParams.project,cardTypeId:model.Id})}}),itemOptions},$scope.deleteIcon=function(model){model&&model.Id&&model.IconId&&apinetService.action({method:"tasks/dictionary/removeCardTypeIcon",project:$stateParams.project,cardTypeId:model.Id}).then(function(){model.IconId=null,model.imageUrl="https://placehold.it/32x32&text=Icon"},$scope.handleException)},$scope.calculateImageUrl=function(m){if(m&&m.IconId){var url=apinetService.apiUrl("tasks/dictionary/getCardTypeIcon",$stateParams.project);url+=url.indexOf("?")>=0?"&":"?",m.imageUrl=url+"project="+$stateParams.project+"&imageId="+m.IconId}}};module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardType",url:"/dictionary/cardTypes",views:{"":{template:template},"moduleMenu@page":{template:menuTemplate}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"tasks.cardTypes.title",url:"page.project.tasks-cardType"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("tasksCardTypeCtrl",["$scope","$controller","apinetService","$stateParams",ctrl])}),define("text!tasks/states/card/cardList.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="tasksCardListCtrl"\r\n     filtered-list="{method: \'tasks/cards/getCards\'}"\r\n     initial-sorters="{ InternalSeqNumber: \'desc\' }">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <!-- Filter -->\r\n            <div filters-box="filter" sorters="sorters" meta="tasks/cards/cardMetadata" group="Tasks.Card"\r\n                 apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n                 search-model="filter.simple.search" search-node="{op: \'||\', items: [{path: \'SeqNumber\', op: \'like\'}, {path: \'Name\', op: \'like\'}, {path: \'Content\', op: \'like\'}]}"\r\n                 filter-applied="filterApplied" style="padding-top: 5px">\r\n                <form class="form form-horizontal" bindonce="i18n.tasks">\r\n                    <div class="form-group">\r\n                        <label class="col-md-3 control-label" bo-text="i18n.core.filters.favorites"></label>\r\n                        <div class="col-md-9">\r\n                            <filter-loader filter="filter" group="Tasks.Card"></filter-loader>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label class="col-md-3 control-label" bo-text="i18n.tasks.cards.fields.seqNumber"></label>\r\n                        <div class="col-md-9">\r\n                            <input lookup="tasks/cards/lookupCards" ng-model="filter.simple.SeqNumber" filter-node="{path: \'Id\', op: \'=\'}" class="form-control" multiple />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label class="col-md-3 control-label" bo-text="i18n.tasks.cards.fields.type"></label>\r\n                        <div class="col-md-9">\r\n                            <input lookup="tasks/dictionary/lookupCardTypes" ng-model="filter.simple.CardType"\r\n                                   filter-node="{path: \'CardType.FullName\', op: \'starts\'}" class="form-control" multiple />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label class="col-md-3 control-label" bo-text="i18n.core.fields.name"></label>\r\n                        <div class="col-md-9">\r\n                            <input type="text" ng-model="filter.simple.Name" filter-node="{path: \'Name\', op:\'like\'}" class="form-control"  />\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label class="col-md-3 control-label" bo-text="i18n.tasks.cards.fields.content"></label>\r\n                        <div class="col-md-9">\r\n                            <input type="text" ng-model="filter.simple.Content" filter-node="{path: \'Content\', op:\'like\'}" class="form-control"  />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <filters-box-more-filters>\r\n                    <ago-box color="muted" border="muted" caption="{{ i18n.core.filters.user }}" title-click-collapse padding collapsed="propsFilterCollapsed">\r\n                        <div user-filter filter-ng-model="filter.user"></div>\r\n                    </ago-box>\r\n                </filters-box-more-filters>\r\n\r\n            </div><!-- div filter-box -->\r\n\r\n            <!-- Content -->\r\n            <ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                <ago-box-title>\r\n                    <i class="icon-calendar-empty"></i>\r\n                    <span bindonce="i18n.tasks.cards" bo-text="i18n.tasks.cards.title"></span>\r\n                </ago-box-title>\r\n\r\n                <ago-box-content>\r\n                    <div class="box-toolbox box-toolbox-top">\r\n                        <ago-error-msg></ago-error-msg>\r\n\r\n                        <div>\r\n                            <a ui-sref="page.project.tasks-cardCreate" class="btn btn-primary" ng-click="newItem();">\r\n                                <i class="icon-plus icon-white"></i>\r\n                                <span class="inline-block hidden-xs" bindonce="i18n.core" bo-text="i18n.core.buttons.add"></span>\r\n                            </a>\r\n\r\n                            <ago-report-selector project="reportProject" report-types="REPORT_TYPES"\r\n                                                 on-error="onReportError(error)" on-get-params="fillReportParameters(settings, parameters)">\r\n                            </ago-report-selector>\r\n\r\n                            <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                            <ago-watch-btn code="Tasks.Card" item-id="null" class="pull-right"></ago-watch-btn>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <card-cards models="models" toggle-details="toggleDetails(model)"></card-cards>\r\n                    <div class="clearfix"></div>\r\n\r\n                    <div class="box-toolbox box-toolbox-bottom">\r\n                        <button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1"\r\n                                bindonce="i18n.core" bo-text="i18n.core.buttons.more"></button>\r\n\r\n                        <refresher active="indication.loading" on-refresh="refreshList()"></refresher>\r\n                        <counter action=\'tasks/cards/getCardsCount\'></counter>\r\n                    </div>\r\n                </ago-box-content>\r\n            </ago-box>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/card/cardList",["../../moduleDef","angular","text!./cardList.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cards",url:"/tasks-cards",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-1,1)}]})}]).controller("tasksCardListCtrl",["$scope","$stateParams","$controller",function($scope,$stateParams,$controller){angular.extend(this,$controller("BaseCardsListCtrl",{$scope:$scope,project:$stateParams.project,detailsUrl:"tasks/cards/getCardDetails"})),angular.extend(this,$controller("ReportableListCtrl",{$scope:$scope,project:$stateParams.project,reportTypes:["card-list"]}))}])}),define("text!tasks/states/card/cardCreate.tpl.html",[],function(){return'<div class="container" ng-controller="tasksCardCreateCtrl">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <div class="box" style="margin-top: 5px">\r\n                <div class="box-header purple-background">\r\n                    <div class="title">\r\n                        <i class="icon-plus"></i>\r\n                        {{ i18n.tasks.cards.create.title }}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="box-content">\r\n                    <ago-error-msg></ago-error-msg>\r\n\r\n                    <form name="form" class="form form-horizontal" novalidate>\r\n                        <!-- Type -->\r\n                        <ago-new-form-item label="i18n.tasks.cards.fields.type" field="CardType" control="form.cardType" vld="validation">\r\n                            <div class="input-group select2-bootstrap-append">\r\n                                <input type="text" id="cardType" name="cardType" lookup="tasks/dictionary/lookupCardTypes"\r\n                                       ng-model="model.type" placeholder="{{ i18n.tasks.cards.create.placeholders.type }}"\r\n                                       required class="form-control" />\r\n                                <span class="input-group-btn">\r\n                                    <a class="btn btn-success" ui-sref="page.project.tasks-cardType">\r\n                                        <icon class="icon-arrow-right"></icon>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </ago-new-form-item>\r\n\r\n                        <!-- Name -->\r\n                        <ago-new-form-item label="i18n.core.fields.name" field="Name"\r\n                                           control="form.name" vld="validation">\r\n                            <input name="name" ng-model="model.name" class="form-control" required>\r\n                        </ago-new-form-item>\r\n\r\n                        <!-- Content -->\r\n                        <ago-new-form-item label="i18n.tasks.cards.fields.content" field="Content"\r\n                                           control="form.content" vld="validation">\r\n                            <textarea name="content" ng-model="model.content" rows="3" class="form-control"></textarea>\r\n                        </ago-new-form-item>\r\n\r\n                        <!-- Source task (if present) -->\r\n                        <ago-new-form-static-item label="i18n.tasks.cards.create.task" visible="task">\r\n                            <div class="checkbox">\r\n                                <label>\r\n                                    <input type="checkbox" ng-model="model.useTask">\r\n                                    {{ i18n.tasks.cards.create.useTask }}\r\n                                </label>\r\n                            </div>\r\n                            <task-short-info model="taskModel"></task-short-info>\r\n                        </ago-new-form-static-item>\r\n\r\n\r\n                        <!-- Goto section -->\r\n                        <div class="form-group">\r\n                            <label class="col-md-2 control-label">{{ i18n.tasks.cards.create.afterCreation }}:</label>\r\n                            <div class="col-md-10">\r\n                                <label class="radio radio-inline">\r\n                                    <input type="radio" ng-model="nextAction" value="goToCard">{{ i18n.tasks.cards.create.goToCard }}\r\n                                </label>\r\n                                <label class="radio radio-inline" ng-show="task">\r\n                                    <input type="radio" ng-model="nextAction" value="goToTask">{{ i18n.tasks.cards.create.goToTask }}\r\n                                </label>\r\n                                <label class="radio radio-inline">\r\n                                    <input type="radio" ng-model="nextAction" value="goToList">{{ i18n.tasks.cards.create.goToList }}\r\n                                </label>\r\n                                <label class="radio radio-inline">\r\n                                    <input type="radio" ng-model="nextAction" value="stayHere">{{ i18n.tasks.cards.create.stayHere }}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <!-- Action section -->\r\n                        <div class="form-actions form-actions-padding-sm">\r\n                            <div class="row">\r\n                                <div class="col-md-10 col-md-offset-2">\r\n                                    <button type="button" class="btn" ng-click="cancel()">{{ i18n.core.buttons.cancel }}</button>\r\n                                    <button type="button" class="btn btn-success" ng-click="create()" ng-disabled="form.$invalid">{{ i18n.core.buttons.save }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/card/cardCreate",["../../moduleDef","angular","text!./cardCreate.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardCreate",url:"/tasks-newCard?task",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope",function($rootScope){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-Cards"}),$rootScope.breadcrumbs.push({name:"tasks.cards.create.title",url:"page.project.tasks-cardCreate"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardCreateCtrl",["$scope","$stateParams","apinetService","$state","tasks.newModels","$controller",function($scope,$stateParams,apinetService,$state,newModels,$controller){angular.extend(this,$controller("ErrorHandlingCtrl",{$scope:$scope})),$scope.cancel=function(){$state.go("page.project.tasks-Cards")},$scope.create=function(){var req=modelToRequest();apinetService.action({method:"tasks/cards/createCard",project:$stateParams.project,model:req}).then(function(response){response.validation.success?($scope.model=initModel(),"goToCard"===$scope.nextAction?$state.go("page.project.tasks-cardProps",{num:response.model,project:$stateParams.project}):"goToTask"==$scope.nextAction?$state.go("page.project.taskView",{num:$scope.task,project:$stateParams.project}):"goToList"===$scope.nextAction?$state.go("page.project.tasks-cards",{project:$stateParams.project}):"stayHere"===$scope.nextAction&&$scope.form.$setPristine()):($scope.resetValidation(),angular.extend($scope.validation,response.validation))},$scope.handleException)};var initModel=function(){return newModels.card({type:null,name:null,content:null,useTask:!0})};$scope.model=newModels.card()||initModel(),$scope.task=$stateParams.task,$scope.nextAction="goToCard",$scope.task&&apinetService.action({method:"tasks/tasks/getTaskInfo",project:$stateParams.project,numpp:$scope.task}).then(function(response){$scope.taskModel=response},$scope.handleException);var modelToRequest=function(){var m=$scope.model,req={CardType:m.type.id,Name:m.name,Content:m.content};return m.useTask&&(req.Task=$scope.task),req}}])}),define("text!tasks/states/card/cardActivity.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="tasksCardActivityCtrl"\r\n     filtered-list="{method: \'tasks/activity/getActivities\'}"\r\n     initial-sorters="{ }">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n            <!--Tabs-->\r\n            <div class="row" bindonce="cardNum">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="activity" tab-settings="tabs"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <!--Card short info-->\r\n            <card-short-info model="model"></card-short-info>\r\n\r\n            <!-- Filter -->\r\n            <div filters-box="filter" sorters="sorters" meta="tasks/activity/activityMetadata" group="Tasks.Activity"\r\n                 apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n                 sorters-hidden="true" filter-applied="filterApplied" style="padding-top: 5px">\r\n                <div class="row">\r\n                    <form class="col-xs-12 form form-horizontal" bindonce="i18n.core">\r\n                        <div class="form-group">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.period.title"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <select ng-model="filter.simple.period" class="form-control">\r\n                                    <option value="all" bo-text="i18n.core.activities.filters.period.all"></option>\r\n                                    <option value="new" bo-text="i18n.core.activities.filters.period.new"></option>\r\n                                    <option value="today" bo-text="i18n.core.activities.filters.period.today"></option>\r\n                                    <option value="yesterday" bo-text="i18n.core.activities.filters.period.yesterday"></option>\r\n                                    <option value="thisWeek" bo-text="i18n.core.activities.filters.period.thisWeek"></option>\r\n                                    <option value="pastWeek" bo-text="i18n.core.activities.filters.period.pastWeek"></option>\r\n                                    <option value="thisMonth" bo-text="i18n.core.activities.filters.period.thisMonth"></option>\r\n                                    <option value="pastMonth" bo-text="i18n.core.activities.filters.period.pastMonth"></option>\r\n                                    <option value="period" bo-text="i18n.core.activities.filters.period.period"></option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.dates.from"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <input bs-datepicker class="form-control" ng-model="filter.simple.fromDate"/>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group" ng-show="filter.simple.period == \'period\'">\r\n                            <label class="col-lg-2 col-sm-4 col-xs-5 control-label"\r\n                                   bo-text="i18n.core.activities.filters.dates.to"></label>\r\n\r\n                            <div class="col-lg-10 col-sm-8 col-xs-7">\r\n                                <input bs-datepicker class="form-control" ng-model="filter.simple.toDate"/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Content -->\r\n            <ago-box color="purple" large="true"\r\n                     header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                <ago-box-title>\r\n                    <i class="fa icon-activities"></i>\r\n                    <span bindonce="i18n.core" bo-text="i18n.core.activities.title"></span>\r\n                </ago-box-title>\r\n\r\n                <ago-box-content>\r\n                    <div class="box-toolbox box-toolbox-top">\r\n                        <ago-error-msg></ago-error-msg>\r\n\r\n                        <button class="btn btn-default" bindonce="i18n.core" bo-text="i18n.core.activities.mark"\r\n                                ng-click="markAsRead()"></button>\r\n\r\n                        <refresher active="indication.loading || cardLoading" on-refresh="refreshList()"></refresher>\r\n                        <div class="clearfix"></div>\r\n                    </div>\r\n\r\n                    <div class="alert alert-warning" ng-show="models.length == 0" bindonce="i18n.core"\r\n                         bo-text="i18n.core.activities.empty">\r\n                    </div>\r\n\r\n                    <div class="row activity">\r\n                        <ul class="col-xs-12 list-unstyled list-hover">\r\n                            <li bindonce ng-repeat="item in models">\r\n                                <div class="clearfix">\r\n                                    <ago-time-moment class="pull-right" time="item.ActivityTime"></ago-time-moment>\r\n\r\n                                    <div class="inline-block user">\r\n                                        <div class="avatar pull-left text-contrast">\r\n                                            <i class="lead icon-user" bo-if="!item.User.AvatarUrl"></i>\r\n                                            <img width="23" height="23" bo-src="item.User.AvatarUrl"\r\n                                                 bo-if="item.User.AvatarUrl"/>\r\n                                        </div>\r\n                                        <div class="action pull-left user-name">\r\n                                            <span class="text-contrast" bo-text="item.User.Name"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="action">\r\n                                    <span bo-text="item.Action"></span>\r\n                                    <span bo-text="item.Before"></span>\r\n                                    <span bo-text="item.After"></span>\r\n\r\n                                    <div class="clearfix"></div>\r\n                                </div>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div class="box-toolbox box-toolbox-bottom">\r\n                        <next-page></next-page>\r\n\r\n                        <refresher active="indication.loading || cardLoading" on-refresh="refreshList()"></refresher>\r\n                        <counter action="tasks/activity/getActivitiesCount"></counter>\r\n                    </div>\r\n                </ago-box-content>\r\n            </ago-box>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/card/cardActivity",["../../moduleDef","angular","text!./cardActivity.tpl.html","text!../moduleMenu.tpl.html","css!../activity/activity.css"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardActivity",url:"/tasks-cards/:num/activity",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.tasks-cardProps({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardActivityCtrl",["$scope","$stateParams","tasks.cardTabs","apinetService",function($scope,$stateParams,cardTabs,apinetService){$scope.cardNum=$stateParams.num,$scope.tabs=cardTabs($scope.cardNum),$scope.isFirstRequest=!0,$scope.initialRequestParams={numpp:$stateParams.num,predefined:"new"},$scope.$on("resetFilter",function(){var defaultPredefined=$scope.isFirstRequest?"new":"all";$scope.filterApplied=$scope.isFirstRequest,$scope.isFirstRequest=!1,$scope.filter.simple={period:defaultPredefined},$scope.requestParams.predefined=defaultPredefined}),$scope.$watch("filter.simple.period",function(value){$scope.requestParams.predefined=value||"all"},!0),$scope.$watch("filter.simple.fromDate",function(value){$scope.requestParams.fromDate=value},!0),$scope.$watch("filter.simple.toDate",function(value){$scope.requestParams.toDate=value},!0);var handleException=function(error){$scope.cardLoading=!1,$scope.resetValidation(),$scope.validation.generalErrors=[error]};$scope.markAsRead=function(){apinetService.action({method:"tasks/activity/markAsRead",project:$stateParams.project,numpp:$stateParams.num}).then(function(){$scope.refreshList(),$scope.$broadcast("tabs:reset")},handleException)},$scope.cardLoading=!1,$scope.onCacheKey=function(key){return key+"_"+$scope.cardNum},$scope.onCacheState=function(state){angular.extend(state,{isFirstRequest:$scope.isFirstRequest,requestParams:$scope.requestParams,model:$scope.model})};var tryLoadCardInfo=function(){$scope.cardLoading=!0,apinetService.action({method:"tasks/cards/getCardInfo",project:$stateParams.project,numpp:$scope.cardNum}).then(function(response){$scope.model=response,$scope.cardLoading=!1},handleException)};tryLoadCardInfo()}])}),define("text!tasks/states/card/cardProps.tpl.html",[],function(){return'<div class="container" ng-controller="tasksCardPropsCtrl">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="props" tab-settings="tabs"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-error-msg></ago-error-msg>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <ago-box color="purple" title-click-collapse collapsible="true" large="true" collapsed="generalCollapsed">\r\n                                <ago-box-title>\r\n                                    <i class="icon-table"></i>\r\n                                    <span bindonce="i18n.tasks" bo-text="i18n.tasks.cards.tabs.props"></span>\r\n                                </ago-box-title>\r\n                                <ago-box-actions>\r\n                                    <a class="btn btn-xs btn-link">\r\n                                        <i class="fa" ng-class="{ \'icon-chevron-up\': !generalCollapsed, \'icon-chevron-down\': generalCollapsed }"></i>\r\n                                    </a>\r\n                                </ago-box-actions>\r\n                                <ago-box-content>\r\n                                    <div class="box-toolbox box-toolbox-top">\r\n                                        <refresher active="loading" on-refresh="load()"></refresher>\r\n                                        <button class="btn btn-danger pull-right" ng-click="delete()" ng-disabled="loading"\r\n                                                style="margin-left: 5px">\r\n                                            <i class="icon-remove"></i>\r\n                                            <span class="inline-block hidden-xs" bindonce="i18n.core" bo-text="i18n.core.buttons.delete"></span>\r\n                                        </button>\r\n                                        <ago-watch-btn code="Tasks.Card" item-id="model.Id" class="pull-right"></ago-watch-btn>\r\n                                        <div class="clearfix"></div>\r\n                                    </div>\r\n                                    <form class="form form-horizontal" novalidate bindonce="i18n.tasks">\r\n\r\n                                        <div class="row">\r\n                                            <div class="col-md-4 col-xs-12">\r\n                                                <div class="box">\r\n                                                    <div id="{{ model.Id }}" class="box-content" style="border: none; box-shadow: none">\r\n                                                        <img class="img-responsive" src="https://placehold.it/320x320&text=Photo"\r\n                                                             ng-src="{{ model.imageUrl }}">\r\n                                                        <div ago-uploader-inrow="itemUploadOption()" drop-target="model.Id"\r\n                                                             on-delete="itemDelete()"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-8 col-xs-12">\r\n                                                <div class="row">\r\n                                                    <ago-form-static-item label="i18n.tasks.cards.fields.seqNumber" large="true">\r\n                                                        {{ model.SeqNumber }}\r\n                                                    </ago-form-static-item>\r\n                                                </div>\r\n                                                <div class="row">\r\n                                                    <ago-form-item label="i18n.tasks.cards.fields.type" field="CardType"\r\n                                                                   vld="validation" large="true">\r\n                                                        <inline-lookup model="model.CardType" input-col="col-xs-12" required\r\n                                                                       on-update="onUpdateProp(model, \'CardType\', val)"\r\n                                                                       on-cancel="resetValidation()"\r\n                                                                       input-lookup="tasks/dictionary/lookupCardTypes">\r\n                                                        </inline-lookup>\r\n                                                    </ago-form-item>\r\n                                                </div>\r\n\r\n                                                <div class="row">\r\n                                                    <ago-form-item label="i18n.core.fields.name" field="Name"\r\n                                                                   vld="validation" large="true">\r\n                                                        <inline-text model="model.Name" input-col="col-xs-12" required\r\n                                                                     on-update="onUpdateProp(model, \'Name\', val)"\r\n                                                                     on-cancel="resetValidation()"></inline-text>\r\n                                                    </ago-form-item>\r\n                                                </div>\r\n\r\n                                                <div class="row">\r\n                                                    <ago-form-item label="i18n.tasks.cards.fields.showImage" field="ShowImage"\r\n                                                                   vld="validation" large="true">\r\n                                                        <inline-checkbox model="model.ShowImage" required\r\n                                                                         true-exp="i18n.tasks.cards.image.show"\r\n                                                                         false-exp="i18n.tasks.cards.image.hide"\r\n                                                                         on-update="onUpdateProp(model, \'ShowImage\', val)"\r\n                                                                         on-cancel="resetValidation()">\r\n                                                        </inline-checkbox>\r\n                                                    </ago-form-item>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div class="row">\r\n                                            <ago-form-item label="i18n.tasks.cards.fields.content"\r\n                                                           field="Content" vld="validation" large="true">\r\n                                                <inline-text-area model="model.Content" input-col="col-xs-12" input-rows="5"\r\n                                                                  on-update="onUpdateProp(model, \'Content\', val)"\r\n                                                                  on-cancel="resetValidation()"></inline-text-area>\r\n                                            </ago-form-item>\r\n                                        </div>\r\n\r\n                                        <div class="row" bindonce="model">\r\n                                            <ago-form-static-item label="i18n.core.fields.creator">\r\n                                                {{ model.Author }}\r\n                                            </ago-form-static-item>\r\n                                            <ago-form-static-item label="i18n.core.fields.creationTime">\r\n                                                {{ model.CreationTime | date:\'ago_datetime\' }}\r\n                                            </ago-form-static-item>\r\n                                        </div>\r\n                                    </form>\r\n                                </ago-box-content>\r\n                            </ago-box>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                        <div class="col-xs-12">\r\n                            <custom-properties model="model" collapsed="customPropsCollapsed"\r\n                                               create-url="tasks/cards/editParam"\r\n                                               update-url="tasks/cards/editParam"\r\n                                               delete-url="tasks/cards/deleteParam"></custom-properties>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n'
}),define("tasks/states/card/cardProps",["../../moduleDef","angular","text!./cardProps.tpl.html","text!./../moduleMenu.tpl.html"],function(module,angular,tpl,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardProps",url:"/tasks-cards/:num",views:{"":{template:tpl},"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.tasks-cardProps({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardPropsCtrl",["$scope","$stateParams","tasks.cardTabs","$controller","stateCacheService","apinetService",function($scope,$stateParams,cardTabs,$controller,stateCacheService,apinetService){var stateCacheKey=function(){return"tasks/cards/getCard_"+$stateParams.num},saveState=function(){stateCacheService.cacheState(stateCacheKey(),{model:angular.copy($scope.model),customPropsCollapsed:$scope.customPropsCollapsed})};angular.extend(this,$controller("ErrorHandlingCtrl",{$scope:$scope})),angular.extend(this,$controller("TabbedViewCtrl",{$scope:$scope,num:$stateParams.num,tabs:cardTabs})),angular.extend(this,$controller("InlineEditCtrl",{$scope:$scope,project:$stateParams.project,method:"tasks/cards/updateCard",afterUpdate:saveState})),angular.extend(this,$controller("BaseCardCtrl",{$scope:$scope,project:$stateParams.project,params:function(){return{method:"tasks/cards/getCard",project:$stateParams.project,num:$stateParams.num}},afterLoad:function(){saveState(),calculateImageUrl()},deleteParams:function(){return{method:"tasks/cards/deleteCard",project:$stateParams.project,id:$scope.model.Id}},afterDeleteRoute:"page.project.tasks-cards"})),angular.extend(this,$controller("CardImageUrlCtrl",{$scope:$scope})),$scope.itemUploadOption=function(){var itemOptions={};return angular.extend(itemOptions,{url:apinetService.apiUrl("tasks/cards/uploadImage",$stateParams.project),acceptFileTypes:/(\.|\/)(gif|jpe?g|png)$/i,done:function(e,data){data&&data.result&&data.result.files&&($scope.model.ImageId=data.result.files[0].model,calculateImageUrl())},fail:function(e,data){"abort"!==data.errorThrown&&$scope.handleException(data.result.message)},maxNumberOfFiles:1,submit:function(e,data){$scope.model.HasImage=!1,delete $scope.model.imageUrl,angular.extend(data.formData,{project:$stateParams.project,cardId:$scope.model.Id})}}),itemOptions},$scope.itemDelete=function(){$scope.model.ImageId&&apinetService.action({method:"tasks/cards/removeImage",project:$stateParams.project,cardId:$scope.model.Id}).then(function(){$scope.model.ImageId=null,$scope.model.imageUrl="https://placehold.it/320x320&text=Photo"},$scope.handleException)};var calculateImageUrl=function(){$scope.model.imageUrl=$scope.cardImageUrl($scope.model)};$scope.customPropsCollapsed=!1,$scope.$watch("customPropsCollapsed",saveState),stateCacheService.restoreState(stateCacheKey(),$scope),$scope.load(),$scope.resetValidation()}])}),define("text!tasks/states/card/cardComments.tpl.html",[],function(){return'<div class="container" ng-controller="tasksCardCommentsCtrl"\r\n     filtered-list="{\'method\': \'tasks/cards/getComments\', \'num\': num}">\r\n    <ago-comments-view create-url="tasks/cards/createComment"></ago-comments-view>\r\n</div>\r\n'}),define("tasks/states/card/cardComments",["../../moduleDef","angular","text!./cardComments.tpl.html","text!./../moduleMenu.tpl.html"],function(module,angular,tpl,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardComments",url:"/tasks-cards/:num/comments",views:{"":{template:tpl},"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.tasks-cardProps({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardCommentsCtrl",["$scope","$stateParams","tasks.cardTabs","$controller",function($scope,$stateParams,cardTabs,$controller){angular.extend(this,$controller("TabbedViewCtrl",{$scope:$scope,num:$stateParams.num,tabs:cardTabs})),$scope.initialRequestParams={num:$scope.num},$scope.onCacheKey=function(key){return key+"_"+$scope.num}}])}),define("text!tasks/states/card/cardFiles.tpl.html",[],function(){return'<div class="container" ng-controller="tasksCardFilesCtrl"\r\n     filtered-list="{method: \'tasks/cards/getFiles\'}"\r\n     initial-sorters="{Name: \'asc\'}">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="files" tab-settings="tabs"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <files-view models="models" owner-id="num"\r\n                        filter-meta="tasks/cards/CardFilesMetadata" filter-group="Tasks.CardFiles"\r\n                        upload-url="tasks/cards/uploadFiles" rename-url="tasks/cards/renameFile"\r\n                        delete-url="tasks/cards/deleteFiles">\r\n            </files-view>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/card/cardFiles",["../../moduleDef","angular","text!./cardFiles.tpl.html","text!./../moduleMenu.tpl.html"],function(module,angular,tpl,menuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardFiles",url:"/tasks-cards/:num/files",views:{"":{template:tpl},"moduleMenu@page":{template:menuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.tasks-cardProps({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardFilesCtrl",["$scope","$stateParams","tasks.cardTabs","$controller",function($scope,$stateParams,cardTabs,$controller){angular.extend(this,$controller("TabbedViewCtrl",{$scope:$scope,num:$stateParams.num,tabs:cardTabs})),$scope.initialRequestParams={ownerId:$scope.num},$scope.$on("resetFilter",function(){$scope.requestParams.ownerId=$scope.num}),$scope.onCacheKey=function(key){return key+"_"+$scope.num}}])}),define("text!tasks/states/card/cardTasks.tpl.html",[],function(){return'<div class="container"\r\n     ng-controller="tasksCardTasksCtrl"\r\n     filtered-list="{method: \'tasks/tasks/getCardTasks\'}"\r\n     initial-sorters="{ InternalSeqNumber: \'desc\' }">\r\n    <div class="row" id="content-wrapper">\r\n        <div class="col-xs-12">\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <ago-tabs current-tab="tasks" tab-settings="tabs"></ago-tabs>\r\n                </div>\r\n            </div>\r\n\r\n            <card-short-info model="model"></card-short-info>\r\n\r\n            <!-- Filter -->\r\n            <tasks-task-filter></tasks-task-filter>\r\n\r\n            <!-- Content -->\r\n            <ago-box color="purple" large="true" header-class="{\'hidden-md\': true, \'hidden-lg\': true}">\r\n                <ago-box-title>\r\n                    <i class="fa icon-tasks"></i>\r\n                    <span bindonce="i18n.tasks" bo-text="i18n.tasks.list.title"></span>\r\n                </ago-box-title>\r\n\r\n                <ago-box-content>\r\n                    <div class="box-toolbox box-toolbox-top">\r\n                        <ago-error-msg></ago-error-msg>\r\n\r\n                        <div>\r\n                            <common-tasks-create-task-btn sref="page.project.taskCreate"\r\n                                                          current="editables.selectedTask" link="linkCard(params)">\r\n                            </common-tasks-create-task-btn>\r\n\r\n                            <ago-view-mode modes="viewModes" settings="viewModeSettings" mode="viewMode"></ago-view-mode>\r\n\r\n                            <refresher active="indication.loading || cardLoading" on-refresh="refreshList()"></refresher>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div ng-if="viewMode === viewModes.list">\r\n                        <common-tasks-task-oneline models="models" sorters="sorters" api-prefix="tasks/tasks"\r\n                               view-state="page.project.taskView" create-state="page.project.taskCreate"\r\n                               comments-state="page.project.taskComments" files-state="page.project.taskFiles">\r\n                        </common-tasks-task-oneline>\r\n                    </div>\r\n                    <div ng-if="viewMode === viewModes.cards">\r\n                        <task-cards models="models" toggle-details="toggleDetails(model)"></task-cards>\r\n                    </div>\r\n                    <div ng-if="viewMode === viewModes.gantt">\r\n                        <common-tasks-task-gantt models="models" select="selectTask(task)" api-prefix="tasks/tasks"\r\n                             module="tasks" task-link-template="#!/project/{{task.ProjectCode}}/tasks/{{task.SeqNumber}}">\r\n                        </common-tasks-task-gantt>\r\n                    </div>\r\n\r\n                    <div class="clearfix"></div>\r\n\r\n                    <div class="box-toolbox box-toolbox-bottom">\r\n                        <button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1"\r\n                                bindonce="i18n.core" bo-text="i18n.core.buttons.more"></button>\r\n\r\n                        <refresher active="indication.loading || cardLoading" on-refresh="refreshList()"></refresher>\r\n                        <counter action=\'tasks/tasks/getCardTasksCount\'></counter>\r\n                    </div>\r\n                </ago-box-content>\r\n            </ago-box>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/card/cardTasks",["../../moduleDef","angular","text!./cardTasks.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.config(["$stateProvider",function($stateProvider){$stateProvider.state({name:"page.project.tasks-cardTasks",url:"/tasks-cards/:num/tasks",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["$rootScope","$stateParams",function($rootScope,$stateParams){$rootScope.breadcrumbs.push({name:"tasks.cards.title",url:"page.project.tasks-cards"}),$rootScope.breadcrumbs.push({name:$stateParams.num,url:"page.project.tasks-cardProps({num: '"+$stateParams.num+"'})"})}],onExit:["$rootScope",function($rootScope){$rootScope.breadcrumbs.splice($rootScope.breadcrumbs.length-2,2)}]})}]).controller("tasksCardTasksCtrl",["$scope","$stateParams","tasks.cardTabs","$controller","apinetService",function($scope,$stateParams,cardTabs,$controller,apinetService){angular.extend(this,$controller("commonTasksTaskListCtrl",{$scope:$scope,apiPrefix:"tasks/tasks",reportTypes:["task-list"]})),angular.extend(this,$controller("TabbedViewCtrl",{$scope:$scope,num:$stateParams.num,tabs:cardTabs})),$scope.linkCard=function(params){params.card=$scope.num},$scope.initialRequestParams={num:$stateParams.num},$scope.onCacheKey=function(key){return key+"_"+$scope.num};var loadCardInfo=function(){$scope.cardLoading=!0,apinetService.action({method:"tasks/cards/getCardInfo",project:$stateParams.project,numpp:$scope.num}).then(function(response){$scope.model=response},$scope.handleException)["finally"](function(){$scope.cardLoading=!1})};$scope.cardLoading=!1,loadCardInfo()}])}),define("tasks/states",["./states/task-type/taskType","./states/task/taskList","./states/task/create/taskCreate","./states/task/view/taskView","./states/task/view/taskComments","./states/task/view/taskFiles","./states/task/view/taskActivity","./states/task/view/taskSubtasks","./states/taskProjectInfo","./states/taskProjectMembers","./states/taskProjectInvitations","./states/taskReports","./states/taskReportTemplates","./states/activity/activityList","./states/taskTags","./states/taskCustomPropTypes","./states/card-type/cardType","./states/card/cardList","./states/card/cardCreate","./states/card/cardActivity","./states/card/cardProps","./states/card/cardComments","./states/card/cardFiles","./states/card/cardTasks"],function(){}),define("text!tasks/directives/timelogView.tpl.html",[],function(){return'<div>\r\n<ago-box color="blue" title-click-collapse collapsible="true" large="true" collapsed="collapsed">\r\n	<ago-box-title>\r\n		<i class="icon-time"></i>\r\n		<span bindonce="i18n.tasks" bo-text="i18n.tasks.view.timelog.title"></span>\r\n	</ago-box-title>\r\n	<ago-box-actions>\r\n		<a class="btn btn-xs btn-link">\r\n			<i class="fa" ng-class="{ \'icon-chevron-up\': !collapsed, \'icon-chevron-down\': collapsed }"></i>\r\n		</a>\r\n	</ago-box-actions>\r\n\r\n	<ago-box-content>\r\n		<ago-error-msg></ago-error-msg>\r\n		<div class="box-toolbox box-toolbox-top" ng-show="isTimelogEditable()">\r\n			<form name="addTimeForm" class="form-inline" novalidate>\r\n				<div class="row" bindonce="i18n.tasks">\r\n					<div class="col-md-2 col-xs-4" ng-class="{\'has-error\': (addTimeForm.$invalid || validation.fieldErrors[\'Time\'] || (editables.focused && hasAddError()))}">\r\n						<input type="text" class="form-control col-xs-2"\r\n                               ng-model="editables.time" ng-focus="editables.focused = true"\r\n                               ng-blur="editables.focused = false" ng-required="editables.focused"\r\n                               bo-attr bo-attr-placeholder="i18n.tasks.view.timelog.placeholders.time">\r\n					</div>\r\n					<div class="col-md-5 col-xs-8 input-group" style="padding-left: 0">\r\n						<input type="text" class="form-control col-xs-5" ng-model="editables.comment"\r\n                               bo-attr bo-attr-placeholder="i18n.tasks.view.timelog.placeholders.comment">\r\n						<div class="input-group-btn">\r\n							<button class="btn btn-success" ng-disabled="hasAddError()" ng-click="add()"\r\n                                    bindonce="i18n.core" bo-text="i18n.core.buttons.add"></button>\r\n						</div>\r\n					</div>\r\n				</div>\r\n			</form>\r\n		</div>\r\n\r\n		<div class="responsive-table" bindonce="i18n.tasks">\r\n			<div class="scrollable-area">\r\n				<p ng-hide="model.Timelog.length">\r\n					<span class="text-muted" bo-text="i18n.tasks.view.timelog.empty"></span>\r\n				</p>\r\n\r\n				<table class="table" ng-show="model.Timelog.length">\r\n					<thead>\r\n						<tr>\r\n							<th class="col-sm-3 col-xs-7" bo-text="i18n.core.fields.name"></th>\r\n							<th class="col-sm-2 col-xs-5" bo-text="i18n.tasks.view.timelog.fields.time"></th>\r\n							<th class="col-sm-3 hidden-xs" bo-text="i18n.tasks.view.timelog.fields.comment"></th>\r\n							<th class="col-md-2 hidden-sm hidden-xs" bo-text="i18n.core.fields.editor"></th>\r\n							<th class="col-md-2 hidden-sm hidden-xs" bo-text="i18n.core.fields.creationTime"></th>\r\n							<th class="onepct" ng-show="isTimelogEditable()">&nbsp;</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr bindonce ng-repeat="e in model.Timelog">\r\n							<td class="col-sm-3 col-xs-7" bo-text="e.Member"></td>\r\n							<td class="col-sm-2 col-xs-5">\r\n								<inline-text model="e.Time" on-update="updateTime(e, \'time\', val)" on-cancel="resetValidation()" required />\r\n							</td>\r\n							<td class="col-sm-3 hidden-xs">\r\n								<inline-text model="e.Comment" on-update="updateTime(e, \'comment\', val)" on-cancel="resetValidation()"/>\r\n							</td>\r\n							<td class="col-md-2 hidden-sm hidden-xs">{{ e.Editor }}</td>\r\n							<td class="col-md-2 hidden-sm hidden-xs" bo-text="e.CreationTime | date:\'ago_datetime\'"></td>\r\n							<td ng-show="isTimelogEditable()">\r\n								<ago-btn-delete bindonce="i18n.core" bo-title="i18n.core.buttons.delete" ng-click="delete(e)"></ago-btn-delete>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</ago-box-content>\r\n</ago-box>\r\n</div>\r\n'}),define("tasks/directives/timelogView",["../moduleDef","angular","text!./timelogView.tpl.html"],function(module,angular,tpl){module.directive("timelog",["apinetService","dialogService","i18n","$rootScope","taskStatuses","$stateParams",function(apinetService,dialogService,i18n,$rootScope,taskStatuses,$stateParams){return{restrict:"E",template:tpl,scope:{model:"=",onChange:"=changed",collapsed:"="},link:function($scope){$scope.i18n=$rootScope.i18n,$scope.editables={time:null,comment:null},$scope.isTimelogEditable=function(){return $scope.model&&$scope.model.Status.id!==taskStatuses.Closed},$scope.hasAddError=function(){return!(!isNaN(parseFloat($scope.editables.time))&&isFinite($scope.editables.time))},$scope.add=function(){apinetService.action({method:"tasks/tasks/trackTime",project:$stateParams.project,taskId:$scope.model.Id,time:$scope.editables.time,comment:$scope.editables.comment}).then(function(response){$scope.model.Timelog.push(response),$scope.onChange(response.Time)},handleException)},$scope["delete"]=function(entry){dialogService.confirm($scope.i18n.msg("core.confirm.delete.record"),$scope.i18n.msg("core.confirm.delete.record")).then(function(){apinetService.action({method:"tasks/tasks/deleteTime",project:$stateParams.project,timeId:entry.Id}).then(function(){var idx=$scope.model.Timelog.indexOf(entry);idx>=0&&$scope.model.Timelog.splice(idx,1),$scope.onChange(-entry.Time)},handleException)})},$scope.updateTime=function(entry,prop,val){return $scope.isTimelogEditable()?apinetService.action({method:"tasks/tasks/updateTime",project:$stateParams.project,timeId:entry.Id,time:"time"===prop?val:entry.Time,comment:"comment"===prop?val:entry.Comment}).then(function(response){return"time"===prop&&$scope.onChange(response.Time-entry.Time),angular.extend(entry,response),!0},function(error){return handleException(error),!1}):(handleException($scope.i18n.msg("tasks.view.timelog.closed")),!1)},$scope.resetValidation=function(){$scope.validation={}};var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]};$scope.resetValidation()}}}])}),define("text!tasks/directives/taskCards.tpl.html",[],function(){return'<div ago-masonry="{columnWidth: \'.grid-sizer\'}" preserve-order="true" class="items-wall">\r\n    <div class="grid-sizer col-xs-12 col-sm-6"></div>\r\n    <div class="item-box ago-masonry-brick col-xs-12 col-sm-6"\r\n         bindonce ng-repeat="model in models track by model.VersionId">\r\n        <div class="box-content clearfix">\r\n            <div class="row">\r\n                <common-tasks-task-card-header view-state="page.project.taskView" create-state="page.project.taskCreate">\r\n                </common-tasks-task-card-header>\r\n\r\n                <div class="clearfix" ng-if="model.InputItems.length > 0 || model.OutputItems.length > 0"></div>\r\n                <div class="col-xs-12" ng-if="model.InputItems.length > 0 || model.OutputItems.length > 0"\r\n                        style="margin-top: 5px">\r\n                    <tasks-task-linked-items icon="icon-signin" num="model.SeqNumber" items="model.InputItems"\r\n                                             more="model.MoreInputItems">\r\n                    </tasks-task-linked-items>\r\n                </div>\r\n\r\n                <div class="clearfix" ng-if="model.InputItems.length > 0 || model.OutputItems.length > 0"></div>\r\n                <div class="col-xs-12" ng-if="model.InputItems.length > 0 || model.OutputItems.length > 0"\r\n                     style="margin-top: 5px">\r\n                    <tasks-task-linked-items icon="icon-signout" num="model.SeqNumber" items="model.OutputItems"\r\n                                             more="model.MoreOutputItems">\r\n                    </tasks-task-linked-items>\r\n                </div>\r\n\r\n                <div class="clearfix" ng-if="model.Tags.length > 0"></div>\r\n                <div class="col-xs-12" ng-if="model.Tags.length > 0" style="margin-top: 5px">\r\n                    <a ui-sref="page.project.taskView({num: model.SeqNumber})" class="pull-left"\r\n                       style="text-decoration: none; margin-top: 5px; margin-right: 12px">\r\n                        <i class="icon-tags"></i>\r\n                    </a>\r\n                    <ago-tags view-model="model" tag-type="\'tasks.task\'"\r\n                              lookup-method="core/dictionary/lookupTags"\r\n                              tag-method="tasks/tasks/tagTask"\r\n                              detag-method="tasks/tasks/detagTask"\r\n                              on-new-tag="doLayout()"\r\n                              on-cancel-new-tag="doLayout()"\r\n                              on-tag="doLayout()" on-detag="doLayout()">\r\n                    </ago-tags>\r\n                    <div class="clearfix"></div>\r\n                </div>\r\n\r\n                <common-tasks-task-card-footer view-state="page.project.taskView"\r\n                   comments-state="page.project.taskComments" files-state="page.project.taskFiles"\r\n                   activity-state="page.project.taskActivity">\r\n                </common-tasks-task-card-footer>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.addBuffer("tasks/directives/cards.css")}),requirejs.s.contexts._.nextTick=requirejs.nextTick,define("tasks/directives/taskCards",["../moduleDef","angular","text!./taskCards.tpl.html","css!./cards.css"],function(module,angular,tpl){module.directive("taskCards",function(){return{restrict:"E",replace:!0,template:tpl,controller:["$scope","$controller",function($scope,$controller){angular.extend(this,$controller("commonTasksTaskCardsCtrl",{$scope:$scope,apiPrefix:"tasks/tasks"}))}],scope:{models:"=",toggleDetails:"&"}}})}),define("text!tasks/directives/taskShortInfo.tpl.html",[],function(){return'<div class="row">\r\n    <div class="col-xs-12">\r\n        <a ui-sref="page.project.taskView({ num: model.SeqNumber })" class="btn btn-sm"\r\n           bo-class="{\'btn-danger\': model.IsExpired}">\r\n            <strong>{{ model.SeqNumber || \'…\' }}</strong>\r\n        </a>\r\n        <ago-status-btn status="model.Status" class="disabled pull-right" view-settings="viewSettings"></ago-status-btn>\r\n        <span>{{ model.TaskType }}</span>\r\n        <span ng-if="model.Content">\r\n            <span class="clip-content">{{ model.Content }}</span>\r\n        </span>\r\n    </div>\r\n    <!-- Add the extra clearfix for only the required viewport -->\r\n    <div class="clearfix"></div>\r\n    <div class="col-xs-12">\r\n        <ago-lookup-items items="model.Executors"></ago-lookup-items>\r\n        <em ng-if="model.DueDate" style="margin-left: 5px">{{ model.DueDate | date:\'ago_date\' }}</em>\r\n    </div>\r\n</div>\r\n'}),define("tasks/directives/taskShortInfo",["../moduleDef","angular","text!./taskShortInfo.tpl.html"],function(module,angular,tpl){module.directive("taskShortInfo",["$rootScope","taskStatusViewSettings",function($rootScope,viewSettings){return{restrict:"E",replace:!0,template:tpl,scope:{model:"="},link:function($scope){$scope.i18n=$rootScope.i18n,$scope.viewSettings=viewSettings}}}])}),define("tasks/directives/baseCards",["../moduleDef","angular","jquery"],function(module,angular,$){return function(name,template,statusViewSettingsName,extender){module.directive(name,["$timeout","$rootScope","$injector",function($timeout,$rootScope,$injector){return{restrict:"E",replace:!0,template:template,controller:["$scope","$rootScope","$injector",function($scope,$rootScope,$injector){$scope.i18n=$rootScope.i18n,$scope.moment=$rootScope.moment,angular.isDefined(statusViewSettingsName)&&($scope.statusViewSettings=$injector.get(statusViewSettingsName))}],scope:{models:"=",toggleDetails:"&",oneColumn:"="},link:function($scope,elm,attr){$scope.doLayout=function(){$timeout(function(){$(".items-wall").masonry("layout")},0,!0)},$scope.toggle=function(model){if($scope.toggleDetails({model:model}),$scope.doLayout(),!model.details.loaded)var unwatch=$scope.$watch(function(){return model.details.loaded},function(newVal){newVal&&(unwatch(),$scope.doLayout())})};var offOpen=$rootScope.$on("sidebar:opened",$scope.doLayout),offClose=$rootScope.$on("sidebar:closed",$scope.doLayout),offChanged=$scope.$parent.$on("modelsChanged",function(){$timeout(function(){$scope.$broadcast("masonry.reloadItemsAndLayout")},0,!1)}),offViewModeChanged=$scope.$parent.$on("viewModeChanged",$scope.doLayout);$scope.$on("$destroy",function(){offOpen(),offClose(),offChanged(),offViewModeChanged()}),angular.isFunction(extender)&&extender($scope,attr,$injector)}}}])}}),define("text!tasks/directives/cardCards.tpl.html",[],function(){return'<div ago-masonry="{columnWidth: \'.grid-sizer\'}" preserve-order="true" class="items-wall">\r\n    <div class="grid-sizer col-xs-12" ng-class="{\'col-sm-6\': !!!oneColumn}"></div>\r\n    <div class="item-box ago-masonry-brick col-xs-12" ng-class="{\'col-sm-6\': !!!oneColumn}"\r\n         bindonce ng-repeat="model in models track by model.VersionId">\r\n        <div class="box-content clearfix">\r\n            <div class="row">\r\n                <div class="col-xs-12">\r\n                    <input type="checkbox" class="selector checkbox" ng-model="model.selected">\r\n                    <a ui-sref="page.project.tasks-cardProps({ num: model.SeqNumber })" class="btn btn-sm">\r\n                        <strong bo-text="model.SeqNumber"></strong>\r\n                    </a>\r\n\r\n                    <card-type-icon icon-id="model.CardTypeIconId" ng-if="model.CardTypeIconId"></card-type-icon>\r\n                    <i bo-text="model.CardType"></i>\r\n                    <strong bo-text="model.Name"></strong>\r\n                </div>\r\n\r\n                <div class="clearfix"></div>\r\n\r\n                <div class="col-xs-12" style="margin-top: 5px">\r\n                    <div class="box hidden-xs pull-left" style="margin-bottom: 0; margin-right: 5px" bo-if="model.ShowImage">\r\n                        <div class="box-content" style="width: 132px; height: 132px; padding: 5px">\r\n                            <img class="img-responsive" style="margin: 0 auto"\r\n                                 src="https://placehold.it/120x120&text=Photo"\r\n                                 bo-src="cardThumbnailImageUrl(model)">\r\n                        </div>\r\n                    </div>\r\n                    <span bo-if="model.Content">\r\n                        <span class="preformatted" bo-text="model.Content"></span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class="clearfix" ng-if="model.Parameters.length > 0"></div>\r\n                <div class="col-xs-12" ng-if="model.Parameters.length > 0">\r\n                    <strong bo-text="i18n.core.customProps.title"></strong>\r\n                    <ago-custom-props-list items="model.Parameters"></ago-custom-props-list>\r\n                </div>\r\n\r\n                <div class="clearfix" bo-if="(model.OpenTasksCount + model.TasksCount) > 0"></div>\r\n                <tasks-card-tasks class="col-xs-12" bo-if="(model.OpenTasksCount + model.TasksCount) > 0"\r\n                                  num="model.SeqNumber" items="model.MyTasks"\r\n                                  open="model.OpenTasksCount" all="model.TasksCount" more="model.MoreMyTasks">\r\n                </tasks-card-tasks>\r\n\r\n                <div class="clearfix"></div>\r\n\r\n                <div class="col-xs-12" style="margin-top: 5px">\r\n                    <details-btn ng-if="model.HasDetails" open="model.details.expanded" toggle="toggle(model)"></details-btn>\r\n\r\n                    <a class="ago-counter" ui-sref="page.project.tasks-cardProps({num: model.SeqNumber})" style="margin-left: 5px">\r\n                        <i class="icon-table"></i>\r\n                        <span class="label label-default" bo-text="model.ParametersCount"></span>\r\n                    </a>\r\n\r\n                    <a class="ago-counter" ui-sref="page.project.tasks-cardComments({num: model.SeqNumber})" style="margin-left: 5px">\r\n                        <i class="icon-comment-alt"></i>\r\n                        <span class="label" bo-text="model.CommentsCount"\r\n                              bo-class="{\'label-primary\': model.CommentsCount > 0, \'label-default\': !model.CommentsCount}">\r\n                        </span>\r\n                    </a>\r\n\r\n                    <a class="ago-counter" ui-sref="page.project.tasks-cardFiles({num: model.SeqNumber})" style="margin-left: 5px">\r\n                        <i class="icon-paper-clip"></i>\r\n                        <span class="label" bo-text="model.FilesCount"\r\n                              bo-class="{\'label-primary\': model.FilesCount > 0, \'label-default\': !model.FilesCount}">\r\n                        </span>\r\n                    </a>\r\n\r\n                    <a class="ago-counter" ui-sref="page.project.tasks-cardActivity({num: model.SeqNumber })" bo-if="model.LastChangeTime">\r\n                        <ago-time-moment time="model.LastChangeTime"></ago-time-moment>\r\n                    </a>\r\n\r\n                    <div class="clearfix"></div>\r\n                </div>\r\n\r\n                <div class="clearfix"></div>\r\n\r\n                <tasks-card-details class="col-xs-12" item="model"></tasks-card-details>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("tasks/states/commonMixins",["../moduleDef","angular"],function(module){module.controller("CardImageUrlCtrl",["$scope","apinetService","$stateParams",function($scope,apinetService,$stateParams){var urlFactory=function(model,method){if(model.ImageId){var url=apinetService.apiUrl("tasks/cards/"+method,$stateParams.project);return url+=url.indexOf("?")>=0?"&":"?",url+"project="+$stateParams.project+"&imageId="+model.ImageId}};$scope.cardImageUrl=$scope.cardImageUrl||function(model){return urlFactory(model,"getCardImage")},$scope.cardThumbnailImageUrl=$scope.cardThumbnailImageUrl||function(model){return urlFactory(model,"getCardThumbnailImage")}}])}),define("tasks/directives/cardCards",["./baseCards","angular","text!./cardCards.tpl.html","./../states/commonMixins","css!./cards.css"],function(factory,angular,tpl){return factory("cardCards",tpl,void 0,function($scope,attr,$injector){var $controller=$injector.get("$controller");angular.extend(this,$controller("CardImageUrlCtrl",{$scope:$scope}))})}),define("tasks/directives/detailsFactory",["../moduleDef","angular"],function(module){return function(name,template){module.directive(name,["$timeout","apinetService","$stateParams",function($timeout,apinetService,$stateParams){return{restrict:"E",replace:!0,template:template,controller:["$scope","$rootScope",function($scope,$rootScope){$scope.i18n=$rootScope.i18n}],scope:{item:"="},link:function($scope){$scope.downloadUrl=function(file){return apinetService.downloadUrl("file/"+$stateParams.project+"/"+file.id,$stateParams.project)}}}}])}}),define("text!tasks/directives/cardDetails.tpl.html",[],function(){return'<div ng-show="item.details.expanded">\r\n    <span ng-hide="item.details.loaded" bindonce="i18n.core" bo-text="i18n.core.labels.loading + \'...\'"></span>\r\n    <form class="form-horizontal" ng-show="item.details.loaded" bindonce="item">\r\n        <div class="row">\r\n\r\n            <ago-details-item label="i18n.core.customProps.title" large="true" ng-show="item.details.Parameters">\r\n                <ago-custom-props-list items="item.details.Parameters"></ago-custom-props-list>\r\n            </ago-details-item>\r\n\r\n            <ago-details-item label="\'tasks.cards.fields.topFiles\' | i18n:{ count: 5 }" ng-show="item.details.Files">\r\n                <span bindonce ng-repeat="f in item.details.Files">\r\n                    <i class="icon-paper-clip"></i>\r\n                    <ago-file-link  name="f.text" download-url="downloadUrl(f)"></ago-file-link>\r\n                </span>\r\n            </ago-details-item>\r\n        </div>\r\n    </form>\r\n</div>\r\n'
}),define("tasks/directives/cardDetails",["./detailsFactory","text!./cardDetails.tpl.html"],function(factory,tpl){factory("tasksCardDetails",tpl)}),define("text!tasks/directives/cardShortInfo.tpl.html",[],function(){return'<div class="row">\r\n    <div class="col-xs-12">\r\n        <a ui-sref="page.project.tasks-cardProps({ num: model.SeqNumber })" class="btn btn-sm">\r\n            <strong>{{ model.SeqNumber || \'…\' }}</strong>\r\n        </a>\r\n        <card-type-icon icon-id="model.CardTypeIconId" ng-if="model.CardTypeIconId"></card-type-icon>\r\n        <i>{{ model.CardType }}</i>\r\n\r\n        <strong>{{ model.Name }}</strong>\r\n\r\n        <span ng-if="model.Content">\r\n            <span class="clip-content">{{ model.Content }}</span>\r\n        </span>\r\n    </div>\r\n</div>\r\n'}),define("tasks/directives/cardShortInfo",["../moduleDef","angular","text!./cardShortInfo.tpl.html"],function(module,angular,tpl){module.directive("cardShortInfo",["$rootScope",function($rootScope){return{restrict:"E",replace:!0,template:tpl,scope:{model:"="},link:function($scope){$scope.i18n=$rootScope.i18n}}}])}),define("text!tasks/directives/subtasks.tpl.html",[],function(){return'<div>\r\n    <ago-box color="red" title-click-collapse collapsible="true" large="true" collapsed="collapsed">\r\n        <ago-box-title>\r\n            <i class="icon-tasks"></i>\r\n            <span bindonce="i18n.tasks" bo-text="i18n.tasks.subtasks.title"></span>\r\n        </ago-box-title>\r\n        <ago-box-actions>\r\n            <a class="btn btn-xs btn-link">\r\n                <i class="fa" ng-class="{ \'icon-chevron-up\': !collapsed, \'icon-chevron-down\': collapsed }"></i>\r\n            </a>\r\n        </ago-box-actions>\r\n\r\n        <ago-box-content>\r\n            <div class="box-toolbox box-toolbox-top">\r\n                <button class="btn btn-success" bindonce="i18n.tasks" bo-text="i18n.tasks.subtasks.create"\r\n                        ng-click="goToNewTask()"></button>\r\n            </div>\r\n            <task-cards models="models" toggle-details="toggleDetails(model)"></task-cards>\r\n        </ago-box-content>\r\n    </ago-box>\r\n</div>\r\n'}),define("tasks/directives/subtasks",["../moduleDef","angular","text!./subtasks.tpl.html"],function(module,angular,template){module.directive("tasksSubtasks",[function(){return{restrict:"E",replace:!0,template:template,scope:{models:"=",collapsed:"="},controller:["apinetService","$stateParams","$state","$scope","$rootScope","$controller",function(apinetService,$stateParams,$state,$scope,$rootScope,$controller){$scope.i18n=$rootScope.i18n,angular.extend(this,$controller("BaseCardsListCtrl",{$scope:$scope,project:$stateParams.project,detailsUrl:"tasks/tasks/getTaskDetails"})),$scope.goToNewTask=function(){$state.go("page.project.taskCreate",{primary:$stateParams.num})}}]}}])}),define("text!tasks/directives/taskLinkedItems.tpl.html",[],function(){return'<ul class="links">\r\n    <li>\r\n        <a ui-sref="page.project.taskView({ num: num })">\r\n            <i class="{{ icon }}"></i>\r\n        </a>\r\n    </li>\r\n    <li ng-repeat="i in items" bindonce ng-switch on="i.ItemType">\r\n        <a ng-switch-when="Card" class="badge badge-success" ui-sref="page.project.tasks-cardProps({ num: i.SeqNumber })">\r\n            <i class="icon-pushpin" bo-if="i.SeqNumber == context"></i>&nbsp;\r\n            <span bo-text="i.SeqNumber"></span>&nbsp;\r\n            <span bo-text="cutType(i)"></span>&nbsp;\r\n            <span bo-text="cutName(i)"></span>\r\n        </a>\r\n\r\n        <span ng-switch-default>\r\n            <i class="icon-paper-clip"></i>\r\n            <ago-file-link name="i.Name" download-url="downloadUrl(i)">\r\n            </ago-file-link>\r\n        </span>\r\n    </li>\r\n    <li ng-if="items.length <= 0" bo-text="i18n.core.labels.none"></li>\r\n    <li>\r\n        <a ui-sref="page.project.taskView({ num: num })"\r\n           ng-if="more > 0"\r\n           bo-text="\'tasks.links.moreItems\' | i18n:{num: more}"></a>\r\n    </li>\r\n</ul>\r\n'}),define("tasks/directives/taskLinkedItems",["../moduleDef","angular","text!./taskLinkedItems.tpl.html"],function(module,angular,tpl){module.directive("tasksTaskLinkedItems",["apinetService","$stateParams",function(apinetService,$stateParams){return{restrict:"E",replace:!0,template:tpl,scope:{num:"=",items:"=",icon:"@",more:"="},controller:["$scope","$rootScope","$filter",function($scope,$rootScope,$filter){$scope.i18n=$rootScope.i18n,$scope.context=$stateParams.num,$scope.cutType=function(model){return $filter("textCut")(model.CardType,21-Math.min(15,model.Name.length))},$scope.cutName=function(model){return $filter("textCut")(model.Name,21-Math.min(6,model.CardType.length))}}],link:function($scope){$scope.downloadUrl=function(file){return apinetService.downloadUrl("file/"+$stateParams.project+"/"+file.Id,$stateParams.project)}}}}])}),define("text!tasks/directives/cardTasks.tpl.html",[],function(){return'<div>\r\n    <ul class="links">\r\n        <li>\r\n            <a class="ago-counter" ui-sref="page.project.tasks-cardTasks({ num: num })" bo-title="i18n.tasks.cards.tasks">\r\n                <i class="icon-tasks"></i>\r\n                <span class="label label-default" bo-text="open + \' / \' + all"\r\n                      bo-title="i18n.tasks.cards.tasksCounter"></span>\r\n            </a>\r\n        </li>\r\n        <li ng-repeat="i in items" bindonce>\r\n            <a class="badge" bo-class="{\'badge-primary\': !i.IsClosed}" ui-sref="page.project.taskView({ num: i.SeqNumber })">\r\n                <span bo-text="i.SeqNumber"></span>&nbsp;\r\n                <span bo-text="i.TaskType"></span>&nbsp;\r\n                <span bo-if="i.Content" bo-html="\'| \' + i.Content + \' |&nbsp;\'"></span>\r\n                <span bo-text="i.Status"></span>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a ui-sref="page.project.tasks-cardTasks({ num: num })"\r\n               ng-if="more > 0"\r\n               bo-text="\'tasks.links.moreItems\' | i18n:{num: more}"></a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n'}),define("tasks/directives/cardTasks",["../moduleDef","angular","text!./cardTasks.tpl.html"],function(module,angular,tpl){module.directive("tasksCardTasks",[function(){return{restrict:"E",replace:!0,template:tpl,scope:{num:"=",items:"=",open:"=",all:"=",more:"="},controller:["$scope","$rootScope",function($scope,$rootScope){$scope.i18n=$rootScope.i18n}]}}])}),define("text!tasks/directives/taskFilter.tpl.html",[],function(){return'<div>\r\n<div filters-box="filter" sorters="sorters" meta="tasks/tasks/taskMetadata" group="Tasks.Task"\r\n     apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n     search-model="filter.simple.search" search-node="{op: \'||\', items: [{path: \'SeqNumber\', op: \'like\'}, {path: \'Content\', op: \'like\'}]}"\r\n     filter-applied="filterApplied" style="padding-top: 5px">\r\n    <form class="form form-horizontal" bindonce="i18n.tasks">\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.core.filters.favorites"></label>\r\n            <div class="col-md-9">\r\n                <filter-loader filter="filter" group="Tasks.Task"></filter-loader>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.common.tasks.filters.role.title"></label>\r\n            <div class="col-md-9">\r\n                <select ng-model="filter.simple.roleFilter" class="form-control">\r\n                    <option value="any" bo-text="i18n.common.tasks.filters.role.any"></option>\r\n                    <option value="meExecutor" bo-text="i18n.common.tasks.filters.role.meExecutor"></option>\r\n                    <option value="meManager" bo-text="i18n.common.tasks.filters.role.meManager"></option>\r\n                    <option value="meAgreemer" bo-text="i18n.common.tasks.filters.role.meAgreemer"></option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.common.tasks.filters.state.title"></label>\r\n            <div class="col-md-9">\r\n                <select ng-model="filter.simple.stateFilter" class="form-control">\r\n                    <option value="any" bo-text="i18n.common.tasks.filters.state.any"></option>\r\n                    <option value="overdue" bo-text="i18n.common.tasks.filters.state.overdue"></option>\r\n                    <option value="notClosed" bo-text="i18n.common.tasks.filters.state.notClosed"></option>\r\n                    <option value="completedAndNotAgreed" bo-text="i18n.common.tasks.filters.state.completedAndNotAgreed"></option>\r\n                    <option value="dayLeft" bo-text="i18n.common.tasks.filters.state.dayLeft"></option>\r\n                    <option value="weekLeft" bo-text="i18n.common.tasks.filters.state.weekLeft"></option>\r\n                    <option value="closedToday" bo-text="i18n.common.tasks.filters.state.closedToday"></option>\r\n                    <option value="closedYesterday" bo-text="i18n.common.tasks.filters.state.closedYesterday"></option>\r\n                    <option value="running" bo-text="i18n.common.tasks.filters.state.running"></option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.status"></label>\r\n            <div class="col-md-9">\r\n                <input lookup="tasks/dictionary/lookupTaskStatuses" ng-model="filter.simple.Status" filter-node="{path: \'Status\', op: \'=\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.seqNumber"></label>\r\n            <div class="col-md-9">\r\n                <input lookup="tasks/tasks/lookupTasks" ng-model="filter.simple.SeqNumber" filter-node="{path: \'Id\', op: \'=\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.type"></label>\r\n            <div class="col-md-9">\r\n                <input lookup="tasks/dictionary/lookupTaskTypes" ng-model="filter.simple.TaskType" filter-node="{path: \'TaskType\', op: \'=\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.dueDate"></label>\r\n            <div class="col-md-9">\r\n                <!-- Can\'t use filter-node on two ng-models or nested ng-models, so, use this hack filter-node="{path: \'DueDate\', op: \'>=\'}"-->\r\n                <datetimepicker ng-model="filter.simple.lDate.value"></datetimepicker>\r\n                <datetimepicker ng-model="filter.simple.rDate.value"></datetimepicker>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.executors"></label>\r\n            <div class="col-md-9">\r\n                <input lookup="core/projects/lookupParticipant" ng-model="filter.simple.Executors" filter-node="{path: \'Executors.Executor.Id\', op: \'=\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.content"></label>\r\n            <div class="col-md-9">\r\n                <input type="text" ng-model="filter.simple.Content" filter-node="{path: \'Content\', op:\'like\'}" class="form-control"  />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.priority"></label>\r\n            <div class="col-md-9">\r\n                <input lookup="tasks/dictionary/lookupTaskPriorities" ng-model="filter.simple.Priority" filter-node="{path: \'Priority\', op: \'=\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="col-md-3 control-label" bo-text="i18n.tasks.fields.tags"></label>\r\n            <div class="col-md-9">\r\n                <input ng-model="filter.simple.Tags" filter-node="{path: \'Tags.Tag.FullName\', op:\'like\'}"\r\n                       lookup="core/dictionary/lookupTags" request-params="{type: \'tasks.task\'}" class="form-control" multiple />\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <filters-box-more-filters>\r\n        <ago-box color="muted" border="muted" caption="{{ i18n.core.filters.user }}" title-click-collapse padding collapsed="propsFilterCollapsed">\r\n            <div user-filter filter-ng-model="filter.user"></div>\r\n        </ago-box>\r\n    </filters-box-more-filters>\r\n</div>\r\n</div>\r\n'}),define("tasks/directives/taskFilter",["../moduleDef","angular","text!./taskFilter.tpl.html"],function(module,angular,tpl){module.directive("tasksTaskFilter",[function(){return{restrict:"E",replace:!0,template:tpl,scope:!1}}])}),define("text!tasks/directives/taskRecords.tpl.html",[],function(){return'<div>\r\n    <ago-box color="blue" title-click-collapse collapsible="true" large="true" collapsed="collapsed">\r\n        <ago-box-title>\r\n            <i ng-class="{\'icon-signin\': !!input, \'icon-signout\': !!!input}"></i>\r\n            <span bindonce="i18n.tasks" bo-text="(!!input ? \'tasks.links.input\' : \'tasks.links.output\')|i18n"></span>\r\n        </ago-box-title>\r\n        <ago-box-actions>\r\n            <a class="btn btn-xs btn-link">\r\n                <i class="fa" ng-class="{ \'icon-chevron-up\': !collapsed, \'icon-chevron-down\': collapsed }"></i>\r\n            </a>\r\n        </ago-box-actions>\r\n\r\n        <ago-box-content>\r\n            <div class="box-toolbox box-toolbox-top" bindonce="i18n.tasks">\r\n                <ago-error-msg></ago-error-msg>\r\n\r\n                <div class="dropdown pull-right" ng-hide="editables.state">\r\n                    <a class="btn dropdown-toggle" data-toggle="dropdown" href="">\r\n                        <span bo-text="i18n.tasks.links.buttons.dropdown"></span>\r\n                        <span class="caret"></span>\r\n                    </a>\r\n                    <ul class="dropdown-menu">\r\n                        <li><a ng-click="goToState(\'addCard\')" href="" bo-text="i18n.tasks.links.buttons.addCard"></a></li>\r\n                        <li><a ng-click="goToState(\'addFile\')" href="" bo-text="i18n.tasks.links.buttons.addFile"></a></li>\r\n                        <li class="divider" ng-if="!!enableCreate"></li>\r\n                        <li ng-if="!!enableCreate"><a ng-click="goToNewCard()" href="" bo-text="i18n.tasks.links.buttons.newCard"></a></li>\r\n                        <li class="divider"></li>\r\n                        <li><a ng-click="removeSelected()" href="" bo-text="i18n.tasks.links.buttons.remove"></a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class="clearfix"></div>\r\n\r\n                <div class="row" ng-if="editables.state == \'addCard\'">\r\n                    <div class="col-xs-12">\r\n                        <div class="input-group">\r\n                            <input type="text" lookup="tasks/cards/lookupCards" class="form-control"\r\n                                   ng-model="editables.card"\r\n                                   bo-attr bo-attr-placeholder="i18n.tasks.links.placeholder">\r\n                            <span class="input-group-btn" bindonce="i18n.core">\r\n                                <button type="button" class="btn" ng-click="goToState(null)"\r\n                                        bo-title="i18n.core.buttons.cancel">\r\n                                    <i class="icon-reply"></i>\r\n                                </button>\r\n                                <button type="button" class="btn" ng-click="addCard()" ng-disabled="!editables.card"\r\n                                        bo-title="i18n.core.buttons.add">\r\n                                    <i class="icon-ok"></i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row" ng-if="editables.state == \'addFile\'">\r\n                    <div class="col-xs-12">\r\n                        <div class="col-xs-2 col-sm-10" ago-uploader="uploadOptions()">\r\n                        </div>\r\n                        <button type="button" class="btn pull-right" ng-click="goToState(null)"\r\n                                bo-title="i18n.core.buttons.cancel">\r\n                            <i class="icon-reply"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="row" bindonce="i18n.tasks">\r\n                <div class="col-xs-12" ng-class="{\'col-sm-6\': cards.length === 1}" ng-if="cards.length > 0">\r\n                    <span class="text-muted" bo-text="i18n.tasks.cards.title"></span>\r\n                    <card-cards models="cards" toggle-details="toggleDetails(model)" one-column="cards.length === 1">\r\n                    </card-cards>\r\n                </div>\r\n                <div class="col-xs-12" ng-class="{\'col-sm-6\': cards.length === 1}" ng-if="files.length > 0">\r\n                    <span class="text-muted" bo-text="i18n.tasks.links.files"></span>\r\n                    <div>\r\n                        <span bindonce ng-repeat="f in files">\r\n                            <input type="checkbox" class="selector checkbox" ng-model="f.selected" style="display: inline">\r\n                            <i class="icon-paper-clip"></i>\r\n                            <ago-file-link name="f.Name" download-url="downloadUrl(f)" on-error="onDownloadError(f)">\r\n                            </ago-file-link>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ago-box-content>\r\n    </ago-box>\r\n</div>\r\n'}),define("tasks/directives/taskRecords",["../moduleDef","angular","text!./taskRecords.tpl.html"],function(module,angular,tpl){module.directive("tasksTaskRecords",["apinetService","dialogService","i18n","$stateParams","$state","$controller",function(apinetService,dialogService,i18n,$stateParams,$state,$controller){return{restrict:"E",template:tpl,controller:["$scope","$rootScope",function($scope,$rootScope){$scope.i18n=$rootScope.i18n}],scope:{taskId:"=",taskNum:"=",input:"=",collapsed:"=",cards:"=",files:"=",enableCreate:"@"},link:function($scope){angular.extend(this,$controller("ErrorHandlingCtrl",{$scope:$scope})),angular.extend(this,$controller("BaseCardsListCtrl",{$scope:$scope,project:$stateParams.project,detailsUrl:"tasks/cards/getCardDetails"})),$scope.downloadUrl=function(file){return apinetService.downloadUrl("file/"+$stateParams.project+"/"+file.Id,$stateParams.project)},$scope.onDownloadError=function(file){$scope.handleException(i18n.msg("core.errors.downloadError",{file:file.Name}))},$scope.editables={state:null,card:null,clear:function(){this.state=null,this.card=null}},$scope.goToState=function(state){$scope.editables.state=state,$scope.editables.state||$scope.editables.clear()};var link=function(params,target){var p=angular.extend({project:$stateParams.project,taskId:$scope.taskId,asInput:!!$scope.input},params);apinetService.action(p).then(function(response){response&&response.validation&&response.validation.success===!0?(target.push(response.model),$scope.editables.clear()):$scope.validation=response.validation},$scope.handleException)};$scope.addCard=function(){link({method:"tasks/tasks/linkCard",cardId:$scope.editables.card.id},$scope.cards)},$scope.removeSelected=function(){dialogService.confirm(i18n.msg("core.confirm.delete.title"),i18n.msg("core.confirm.delete.records")).then(function(){var selected=[],cards=[],files=[];angular.forEach($scope.cards,function(card){card.selected&&(selected.push(card.Id),cards.push(card))}),angular.forEach($scope.files,function(file){file.selected&&(selected.push(file.Id),files.push(file))}),selected.length<=0||apinetService.action({method:"tasks/tasks/unlinkItems",project:$stateParams.project,taskId:$scope.taskId,ids:selected,fromInput:$scope.input}).then(function(){for(var cardIndex=0;cardIndex<cards.length;cardIndex++){var idx=$scope.cards.indexOf(cards[cardIndex]);$scope.cards.splice(idx,1)}for(var fileIndex=0;fileIndex<files.length;fileIndex++){var idx=$scope.files.indexOf(files[fileIndex]);$scope.files.splice(idx,1)}},$scope.handleException)})},$scope.uploadOptions=function(){return{url:apinetService.apiUrl("tasks/tasks/uploadIOFiles",$stateParams.project),done:function(e,data){$scope.handleUploadResult(data.result),$scope.$apply()},stop:function(){$scope.editables.clear(),$scope.$apply()},fail:function(e,data){"abort"!==data.errorThrown&&($scope.handleException(data.result.message),$scope.$apply())},submit:function(e,data){angular.extend(data.formData,{project:$stateParams.project,ownerId:$scope.taskNum,asInput:$scope.input})}}},$scope.findIndexById=function(fileId){if(!fileId)return-1;var modelIndex=-1;return angular.forEach($scope.files,function(model,index){model.Id===fileId&&(modelIndex=index)}),modelIndex},$scope.handleUploadResult=function(response){response&&response.files&&response.files.map(function(file){var idx=$scope.findIndexById(file.model.Id);0>idx?$scope.files.push(file.model):$scope.files[idx]=file.model})},$scope.goToNewCard=function(){$state.go("page.project.tasks-cardCreate",{task:$scope.taskNum})}}}}])}),define("text!tasks/directives/cardTypeIcon.tpl.html",[],function(){return'<img class="img-responsive" src="https://placehold.it/32x32&text=Icon" ng-src="{{ iconUrl() }}" style="display: inline">\r\n'}),define("tasks/directives/cardTypeIcon",["../moduleDef","angular","text!./cardTypeIcon.tpl.html"],function(module,angular,tpl){module.directive("cardTypeIcon",[function(){return{restrict:"E",replace:!0,template:tpl,scope:{iconId:"="},controller:["$scope","apinetService","$stateParams",function($scope,apinetService,$stateParams){$scope.iconUrl=function(){if($scope.iconId){var url=apinetService.apiUrl("tasks/dictionary/getCardTypeIcon",$stateParams.project);return url+=url.indexOf("?")>=0?"&":"?",url+"project="+$stateParams.project+"&imageId="+$scope.iconId}}}]}}])}),define("text!tasks/states/card-type/cardTypeFullNameColumn.tpl.html",[],function(){return'<tr>\r\n    <td id="{{ m.Id }}" class="col-xs-1">\r\n        <div class="box-content" ng-init="calculateImageUrl(m)" style="border: none; box-shadow: none; padding-top: 0; padding-bottom: 0">\r\n            <img class="img-responsive" src="https://placehold.it/32x32&text=Icon"\r\n                 ng-src="{{ m.imageUrl }}">\r\n            <div ago-uploader-inrow="itemUploadOption(m)" drop-target="m.Id" on-delete="deleteIcon(m)"></div>\r\n        </div>\r\n    </td>\r\n    <td class="col-xs-11 col-md-9" style="white-space: normal">\r\n        <inline-text model="m.Name" view-model="m.FullName" on-update="updateProp(m, \'Name\', val)" on-cancel="onCancel(m)"\r\n                     required input-class="col-xs-10">\r\n        </inline-text>\r\n        <span ng-show="m.validation.generalErrors" class="help-block has-error">\r\n            {{ m.validation.generalErrors | joinBy }}\r\n        </span>\r\n        <span ng-show="m.validation.fieldErrors[\'Name\']" class="help-block has-error">\r\n            {{ m.validation.fieldErrors[\'Name\'] | joinBy }}\r\n        </span>\r\n    </td>\r\n</tr>\r\n'}),define("tasks/states/card-type/cardTypeFullNameColumn",["../../moduleDef","angular","text!./cardTypeFullNameColumn.tpl.html"],function(module,angular,tpl){module.directive("cardTypeFullNameColumn",function(){return{restrict:"E",replace:!0,template:tpl}})}),define("text!tasks/states/card-type/cardTypeFullNameHeader.tpl.html",[],function(){return'<tr bindonce="i18n.core">\r\n    <th class="col-xs-1" bo-text="i18n.core.fields.icon"></th>\r\n    <th class="col-xs-11 col-md-9" bo-text="i18n.core.fields.fullName"></th>\r\n</tr>\r\n'}),define("tasks/states/card-type/cardTypeFullNameHeader",["../../moduleDef","angular","text!./cardTypeFullNameHeader.tpl.html"],function(module,angular,tpl){module.directive("cardTypeFullNameHeader",function(){return{restrict:"E",replace:!0,template:tpl}})}),define("tasks/directives",["./directives/timelogView","./directives/taskCards","./directives/taskShortInfo","./directives/cardCards","./directives/cardDetails","./directives/cardShortInfo","./directives/subtasks","./directives/taskLinkedItems","./directives/cardTasks","./directives/taskFilter","./directives/taskRecords","./directives/cardTypeIcon","./states/card-type/cardTypeFullNameColumn","./states/card-type/cardTypeFullNameHeader"],function(){}),define("tasks/services/newModelsService",["../moduleDef","angular"],function(module){module.factory("tasks.newModels",[function(){var newTaskModel=null,newCardModel=null;return{card:function(m){return m&&(newCardModel=m),newCardModel},task:function(m){return m&&(newTaskModel=m),newTaskModel}}}])}),define("tasks/services/tabs",["../moduleDef"],function(module){var mi=function(name,sref,code,all,unread){return{name:name,sref:sref,code:code,allProp:all,unreadProp:unread}};module.service("tasks.cardTabs",[function(){return function(num){return{items:[mi("props","page.project.tasks-cardProps({num: '"+num+"'})","tasks.cards.tabs.props",void 0,"HasPropChanges"),mi("tasks","page.project.tasks-cardTasks({num: '"+num+"'})","tasks.cards.tabs.tasks","TasksCount","HasTasksChanges"),mi("comments","page.project.tasks-cardComments({num: '"+num+"'})","tasks.cards.tabs.comments","CommentsCount","HasCommentsChanges"),mi("files","page.project.tasks-cardFiles({num: '"+num+"'})","tasks.cards.tabs.files","FilesCount","HasFilesChanges"),mi("activity","page.project.tasks-cardActivity({num: '"+num+"'})","core.activities.title","ActivitiesCount","HasUnreadActivities")],action:"tasks/cards/getCounters",params:{card:num}}}}]),module.service("tasks.taskTabs",[function(){return function(num){return{items:[mi("overview","page.project.taskView({num: '"+num+"'})","tasks.view.tabs.overview",void 0,"HasPropChanges"),mi("subtasks","page.project.taskSubtasks({num: '"+num+"'})","tasks.view.tabs.subtasks","SubtasksCount","HasSubtasksChanges"),mi("comments","page.project.taskComments({num: '"+num+"'})","tasks.view.tabs.comments","CommentsCount","HasCommentsChanges"),mi("files","page.project.taskFiles({num: '"+num+"'})","tasks.view.tabs.files","FilesCount","HasFilesChanges"),mi("activity","page.project.taskActivity({num: '"+num+"'})","core.activities.title","ActivitiesCount","HasUnreadActivities")],action:"tasks/tasks/getCounters",params:{task:num}}}}]),module.service("tasks.projectTabs",[function(){return function(project){return{items:[mi("props","page.project.settings({project: '"+project+"'})","projects.settings.tabs.overview",void 0,"HasPropChanges"),mi("members","page.project.taskMembers({project: '"+project+"'})","projects.settings.tabs.members","MembersCount"),mi("invite","page.project.taskInvitations({project: '"+project+"'})","projects.settings.tabs.invitations","InvitationsCount"),mi("templates","page.project.templates.tasks({project: '"+project+"'})","projects.settings.tabs.templates","TemplatesCount")],action:"tasks/project/getCounters"}}}])}),define("tasks/services",["./services/newModelsService","./services/tabs"],function(){}),define("tasks/nls/en/module",["../../moduleDef"],function(module){module.service("tasks/nls/module/en",["i18n",function(i18n){return function(){i18n.addMessages("tasks",{menu:{dictionaries:"Dictionaries"},priority:{normal:"Normal"},canClose:{allowed:"Allowed",restricted:"Forbidden"},fields:{seqNumber:"Task number",type:"Task type",managers:"Managers",executors:"Executors",dueDate:"Finish date",content:"Content",status:"Status",priority:"Priority",note:"Note",agreements:"Agreements",topFiles:"Files (top {{count}})",tags:"Tags",estimatedTime:"Estimated time, h",spentTime:"Spent time, h",executorCanCloseTask:"Executor can close task",executorCanAssignTask:"Executor can assign task",primary:"Primary task",startDate:"Start date",predecessors:"Predecessors",predecessorsByStart:"Start with",predecessorsByEnd:"Start after",percentCompleted:"Percent completed",executorsCanCreateSubtask:"Create subtasks"},confirm:{"delete":{task:"Are you really want to delete this task?",tasks:"Are you really want to delete this tasks?"}},view:{tabs:{overview:"Overview",subtasks:"Subtasks",comments:"Comments",files:"Files"},general:{title:"General properties",assignAll:"Assign all"},statusHistory:{title:"Status history",fields:{status:"Status",author:"Set by",effectivePeriod:"Effective period",duration:"Duration"},period:"from {{start}} to {{finish}}",duration:{days:{one:"day",few:"days",many:"days",other:"days"},hours:{one:"hour",few:"hours",many:"hours",other:"hours"},minutes:"min"}},files:{title:"Files",fields:{size:"File size"}},timelog:{title:"Timelog",empty:"No timelog entries",placeholders:{time:"Spent time (hours)",comment:"Comment (optional)"},fields:{time:"Time",comment:"Comment"},closed:"Timelog closed"},comments:{title:"Comments",placeholder:"Type new comment...",fields:{text:"Comment"}}},list:{title:"Tasks",buttons:{add:"Create task",reportDefault:"Task list",detailedTaskList:"Detailed task list",addSubtask:"Create subtask",addNextSubtask:"Create next"},placeholders:{"delete":"Delete task",deleteSelected:"Delete selected tasks"},expiration:{already:"Expired {{days}} {{daysText}}",will:"Will be expired {{days}} {{daysText}}"}},create:{linkedCard:"Source object",useCard:"Use this object as source for task",labels:{afterCreationGoToCard:"Navagate to object tasks"}},subtasks:{title:"Subtasks",create:"New subtask",moreItems:"(+{{num}} more)"},links:{input:"Input",output:"Output",moreItems:"(+{{num}} more)",buttons:{dropdown:"Action",addCard:"Add object",addFile:"Add file",newCard:"Create new object",remove:"Unlink selected items"},placeholder:"Select item...",files:"Files"},cards:{title:"Objects",tasks:"Object tasks",tasksCounter:"Tasks (open / total)",tabs:{props:"Properties",tasks:"Tasks",comments:"Comments",files:"Files"},fields:{seqNumber:"Object number",type:"Object type",identifier:"Identifier",content:"Content",topFiles:"Files (top {{count}})",showImage:"Show image"},image:{show:"Show",hide:"Hide"},create:{title:"Create new object",placeholders:{type:"Select object type..."},afterCreation:"After object created",goToCard:"Navigate to new object",goToTask:"Navigate to source task",goToList:"Navigate to objects list",stayHere:"Create another object",task:"Source task",useTask:"Link with this task"}},cardTypes:{title:"Object types"},tags:{type:"Task tags"}})}}])}),define("tasks/nls/ru/module",["../../moduleDef"],function(module){module.service("tasks/nls/module/ru",["i18n",function(i18n){return function(){i18n.addMessages("tasks",{menu:{dictionaries:"Справочники"},priority:{normal:"Нормальный"},canClose:{allowed:"Разрешено",restricted:"Запрещено"},fields:{seqNumber:"Номер задачи",type:"Тип задачи",managers:"Менеджеры",executors:"Исполнители",dueDate:"Дата окончания",content:"Содержание",status:"Статус",priority:"Приоритет",note:"Примечание",agreements:"Согласования",topFiles:"Файлы (топ {{count}})",tags:"Теги",estimatedTime:"Планируемое время, ч",spentTime:"Затраченное время",executorCanCloseTask:"Исполнитель может закрыть задачу",executorCanAssignTask:"Исполнитель может назначить задачу",primary:"Главная задача",startDate:"Дата начала",predecessors:"Предшественники",predecessorsByStart:"Начать вместе с",predecessorsByEnd:"Начать после",percentCompleted:"% выполнения",executorsCanCreateSubtask:"Создание подзадач"},confirm:{"delete":{task:"Вы действительно хотите удалить задачу?",tasks:"Вы действительно хотите удалить задачи?"}},view:{tabs:{overview:"Свойства",subtasks:"Подзадачи",comments:"Комментарии",files:"Файлы"},general:{title:"Общие свойства",assignAll:"Назначить все"},statusHistory:{title:"История статуса",fields:{status:"Статус",author:"Установил",effectivePeriod:"Период действия",duration:"Продолжительность"},period:"с {{start}} по {{finish}}",duration:{days:{one:"день",few:"дня",many:"дней",other:"дней"},hours:{one:"час",few:"часа",many:"часов",other:"часов"},minutes:"м"}},files:{title:"Файлы",fields:{size:"Размер файла"}},timelog:{title:"Затраченное время",empty:"Нет записей",placeholders:{time:"Затраченное время (часы)",comment:"Комментарий (опционально)"},fields:{time:"Время",comment:"Комментарий"},closed:"Задача уже закрыта"},comments:{title:"Комментарии",placeholder:"Напишите свой комментарий ...",fields:{text:"Комментарий"}}},list:{title:"Задачи",buttons:{add:"Создать задачу",reportDefault:"Список задач",detailedTaskList:"Подробный список задач",addSubtask:"Создать подзадачу",addNextSubtask:"Создать следующую"},placeholders:{"delete":"Удалить задачу",deleteSelected:"Удалить отмеченные задачи"},expiration:{already:"Просрочена {{days}} {{daysText}}",will:"Будет просрочена через {{days}} {{daysText}}"}},create:{linkedCard:"Объект (вход)",useCard:"Связать объект со входом задачи",labels:{afterCreationGoToCard:"Перейти к задачам объекта"}},subtasks:{title:"Подзадачи",create:"Новая подзадача",moreItems:"(+{{num}} еще)"},links:{input:"Вход",output:"Выход",moreItems:"(+{{num}} еще)",buttons:{dropdown:"Действия",addCard:"Добавить объект",addFile:"Добавить файл",newCard:"Создать новый объект",remove:"Удалить связь с выбранными элементами"},placeholder:"Выберите элемент...",files:"Файлы"},cards:{title:"Объекты",tasks:"Задачи объекта",tasksCounter:"Задачи (незакрыто / всего)",tabs:{props:"Свойства",tasks:"Задачи",comments:"Комментарии",files:"Файлы"},fields:{seqNumber:"Номер объекта",type:"Тип объекта",identifier:"Идентификатор",content:"Содержание",topFiles:"Файлы (топ {{count}})",showImage:"Видимость изображения"},image:{show:"Показывать",hide:"Скрывать"},create:{title:"Создание нового объекта",placeholders:{type:"Выберите тип объекта..."},afterCreation:"После создания объекта",goToCard:"Перейти к созданному",goToTask:"Перейти к задаче",goToList:"Перейти в реестр объектов",stayHere:"Создать другой объект",task:"Задача (вход)",useTask:"Связать с этой задачей"}},cardTypes:{title:"Типы объектов"},tags:{type:"Теги задач"}})
}}])}),define("tasks/nls/module",["tasks/nls/en/module","tasks/nls/ru/module"]),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.addBuffer("tasks/assets/tasks-styles.css")}),requirejs.s.contexts._.nextTick=requirejs.nextTick,define("tasks/module",["./moduleDef","./states","./directives","./services","./nls/module","css!./assets/tasks-styles.css"],function(module){return module.run(["i18n",function(i18n){i18n.registerLocalizationModule("tasks/nls/module"),i18n.sync()}])}),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.setBuffer('.activity {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n    white-space: normal;\r\n}\r\n\r\n.activity > ul > li {\r\n    border-bottom: 1px solid #dddddd;\r\n    padding: 10px;\r\n}\r\n\r\n.activity > ul > li:last-child {\r\n    border-bottom: none;\r\n    padding-bottom: 0;\r\n}\r\n\r\n.activity .activity-item {\r\n    margin-right: 20px;\r\n}\r\n\r\n.activity .user {\r\n    white-space: nowrap;\r\n}\r\n\r\n.activity .user .avatar {\r\n    margin-right: 10px;\r\n}\r\n\r\n.activity .user .user-name {\r\n    margin-right: 10px;\r\n}\r\n\r\n.activity .more-users span {\r\n    height: 23px;\r\n}\r\n\r\n.activity .details {\r\n    margin-top: 5px;\r\n}\r\n\r\n.activity ul.changes {\r\n    display: inline;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.activity ul.changes li {\r\n    float: left;\r\n    display: inline;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.activity ul.changes li:after {\r\n    content: ",\\00a0";\r\n}\r\n\r\n.activity ul.changes li.last:after {\r\n    content: "";\r\n}\r\n\r\n.activity ul.changes li.more-changes:before {\r\n    content: "\\00a0";\r\n}\r\n\r\n.activity ul.changes li.more-changes:after {\r\n    content: "";\r\n}\r\ndiv.item-box {\r\n    margin-bottom: 10px;\r\n}\r\n\r\ndiv.item-box .time-moment {\r\n    margin-left: 5px;\r\n}\r\n\r\ndiv.item-box .details-btn {\r\n    margin-top: 5px;\r\n}\r\n\r\ndiv.item-box ul.links {\r\n    display: inline;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ndiv.item-box ul.links li {\r\n    float: left;\r\n    display: inline;\r\n    list-style: none;\r\n    margin: 2px 0 0 5px;\r\n    padding: 0;\r\n}\r\n\r\ndiv.item-box ul.links li:first-child {\r\n    margin-left: 0;\r\n}\r\n\r\ndiv.item-box ul.links li:after {\r\n    content: "\\0020";\r\n}\r\n\r\ndiv.item-box ul.links li:last-child:after {\r\n    content: "";\r\n}\r\n\r\ndiv.item-box ul.links li > a {\r\n    text-decoration: none;\r\n}\r\n\r\ndiv.item-box input[type="checkbox"].selector {\r\n    display: inline-block;\r\n    margin-right: 6px;\r\n}\r\n.ago-tabs {\r\n    margin-top: 5px;\r\n}\r\n')}),requirejs.s.contexts._.nextTick=requirejs.nextTick;